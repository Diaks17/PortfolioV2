{
  "resolvedId": "/Users/diaks/PortfolioV2/pages/projects/web/overlord-fight.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n    <section class=\"project\">\n        <div class=\"resume\">\n            <p>Il s’agit d’un projet ou l’on devait faire un site de réservation d’une gamme de produits, notre site\n                devait impérativement avoir un panier afin de réserver les article, c’est comme ça que est né mon site\n                Karma</p>\n                <nuxt-link to=\"https://overlord-fight.moussa-diakite.fr/\" class=\"project-link\">Voir site</nuxt-link>\n                <nuxt-link to=\"https://www.figma.com/file/tFP4GyGdSLYUSryekLpYnm/overlord-fight?type=design&node-id=0%3A1&mode=design&t=TVkbKNSpMzugGMGf-1\" class=\"project-link\">Voir maquette</nuxt-link>\n        </div>\n        <div class=\"project-images\">\n            <div class=\"project-img\">\n                <img src=\"/img/overlord.jpg\" alt=\"\">\n            </div>\n        </div>\n    </section>\n</template>\n<style>\n@import url(\"~/assets/styles/project.css\");\n</style>",
      "start": 1715600168026,
      "end": 1715600168422,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715600168422,
      "end": 1715600168422,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715600168422,
      "end": 1715600168422,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715600168422,
      "end": 1715600168422,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715600168422,
      "end": 1715600168422,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715600168422,
      "end": 1715600168422,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1715600168422,
      "end": 1715600168422,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1715600168422,
      "end": 1715600168422,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1715600168422,
      "end": 1715600168422,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715600168422,
      "end": 1715600168422,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "const _sfc_main = {}\nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\nimport _imports_0 from '/img/overlord.jpg'\n\n\nfunction _sfc_ssrRender(_ctx, _push, _parent, _attrs) {\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")\n\n  _push(`<section${_ssrRenderAttrs(_mergeProps({ class: \"project\" }, _attrs))}><div class=\"resume\"><p>Il s’agit d’un projet ou l’on devait faire un site de réservation d’une gamme de produits, notre site devait impérativement avoir un panier afin de réserver les article, c’est comme ça que est né mon site Karma</p>`)\n  _push(_ssrRenderComponent(_component_nuxt_link, {\n    to: \"https://overlord-fight.moussa-diakite.fr/\",\n    class: \"project-link\"\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`Voir site`)\n      } else {\n        return [\n          _createTextVNode(\"Voir site\")\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(_ssrRenderComponent(_component_nuxt_link, {\n    to: \"https://www.figma.com/file/tFP4GyGdSLYUSryekLpYnm/overlord-fight?type=design&node-id=0%3A1&mode=design&t=TVkbKNSpMzugGMGf-1\",\n    class: \"project-link\"\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`Voir maquette`)\n      } else {\n        return [\n          _createTextVNode(\"Voir maquette\")\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div><div class=\"project-images\"><div class=\"project-img\"><img${_ssrRenderAttr(\"src\", _imports_0)} alt=\"\"></div></div></section>`)\n}\n\nimport \"/Users/diaks/PortfolioV2/pages/projects/web/overlord-fight.vue?vue&type=style&index=0&lang.css\"\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"pages/projects/web/overlord-fight.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['ssrRender',_sfc_ssrRender]])",
      "start": 1715600168422,
      "end": 1715600168424,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/diaks/PortfolioV2/pages/projects/web/overlord-fight.vue"
        ],
        "names": [],
        "mappings": ";;OAWqB,UAAuB;;;;;;EAX5C,iBAAA,gBAAA,cACa,KAAK,EAAC,SAAS,IAD5B;EAAA,MAAA;IAM2B,EAAE,EAAC,2CAA2C;IAAC,KAAK,EAAC,cAAc;;IAN9F,kBAMgB,CAAoG;UANpH;QAAA;;;UAAA,iBAM+F,WAAS;;;;IANxG,GAAA;;EAAA,MAAA;IAO2B,EAAE,EAAC,6HAA6H;IAAC,KAAK,EAAC,cAAc;;IAPhL,kBAOgB,CAA0L;UAP1M;QAAA;;;UAAA,iBAOiL,eAAa;;;;IAP9L,GAAA;;EAAA,wEAAA,eAWqB,KAAuB,EAAvB,UAAuB",
        "sourcesContent": [
          "<template>\n    <section class=\"project\">\n        <div class=\"resume\">\n            <p>Il s’agit d’un projet ou l’on devait faire un site de réservation d’une gamme de produits, notre site\n                devait impérativement avoir un panier afin de réserver les article, c’est comme ça que est né mon site\n                Karma</p>\n                <nuxt-link to=\"https://overlord-fight.moussa-diakite.fr/\" class=\"project-link\">Voir site</nuxt-link>\n                <nuxt-link to=\"https://www.figma.com/file/tFP4GyGdSLYUSryekLpYnm/overlord-fight?type=design&node-id=0%3A1&mode=design&t=TVkbKNSpMzugGMGf-1\" class=\"project-link\">Voir maquette</nuxt-link>\n        </div>\n        <div class=\"project-images\">\n            <div class=\"project-img\">\n                <img src=\"/img/overlord.jpg\" alt=\"\">\n            </div>\n        </div>\n    </section>\n</template>\n<style>\n@import url(\"~/assets/styles/project.css\");\n</style>"
        ]
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715600168424,
      "end": 1715600168424,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715600168424,
      "end": 1715600168424,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715600168424,
      "end": 1715600168424,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715600168424,
      "end": 1715600168424,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715600168424,
      "end": 1715600168424,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715600168424,
      "end": 1715600168424,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715600168424,
      "end": 1715600168424,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715600168424,
      "end": 1715600168425,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715600168425,
      "end": 1715600168425,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1715600168425,
      "end": 1715600168425,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1715600168425,
      "end": 1715600168425,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715600168425,
      "end": 1715600168425,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715600168425,
      "end": 1715600168425,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715600168425,
      "end": 1715600168425,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715600168425,
      "end": 1715600168425,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715600168425,
      "end": 1715600168425,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715600168426,
      "end": 1715600168426,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715600168426,
      "end": 1715600168426,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715600168426,
      "end": 1715600168427,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715600168426,
      "end": 1715600168427,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715600168427,
      "end": 1715600168427,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715600168427,
      "end": 1715600168427,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715600168427,
      "end": 1715600168427,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715600168427,
      "end": 1715600168427,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1715600168427,
      "end": 1715600168427,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/Users/diaks/PortfolioV2/node_modules/nuxt/dist/app/components/nuxt-link\";\nconst _sfc_main = {}\nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\nimport _imports_0 from '/img/overlord.jpg'\n\n\nfunction _sfc_ssrRender(_ctx, _push, _parent, _attrs) {\n  const _component_nuxt_link = __nuxt_component_0\n\n  _push(`<section${_ssrRenderAttrs(_mergeProps({ class: \"project\" }, _attrs))}><div class=\"resume\"><p>Il s’agit d’un projet ou l’on devait faire un site de réservation d’une gamme de produits, notre site devait impérativement avoir un panier afin de réserver les article, c’est comme ça que est né mon site Karma</p>`)\n  _push(_ssrRenderComponent(_component_nuxt_link, {\n    to: \"https://overlord-fight.moussa-diakite.fr/\",\n    class: \"project-link\"\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`Voir site`)\n      } else {\n        return [\n          _createTextVNode(\"Voir site\")\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(_ssrRenderComponent(_component_nuxt_link, {\n    to: \"https://www.figma.com/file/tFP4GyGdSLYUSryekLpYnm/overlord-fight?type=design&node-id=0%3A1&mode=design&t=TVkbKNSpMzugGMGf-1\",\n    class: \"project-link\"\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`Voir maquette`)\n      } else {\n        return [\n          _createTextVNode(\"Voir maquette\")\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div><div class=\"project-images\"><div class=\"project-img\"><img${_ssrRenderAttr(\"src\", _imports_0)} alt=\"\"></div></div></section>`)\n}\n\nimport \"/Users/diaks/PortfolioV2/pages/projects/web/overlord-fight.vue?vue&type=style&index=0&lang.css\"\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"pages/projects/web/overlord-fight.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['ssrRender',_sfc_ssrRender]])",
      "start": 1715600168427,
      "end": 1715600168428,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACphnvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,knD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CA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,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnxG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC"
      }
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1715600168428,
      "end": 1715600168428,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715600168428,
      "end": 1715600168428,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715600168428,
      "end": 1715600168428,
      "order": "normal"
    }
  ]
}
