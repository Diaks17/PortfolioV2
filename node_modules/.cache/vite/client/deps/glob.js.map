{
  "version": 3,
  "sources": ["browser-external:fs", "browser-external:path", "../../../../fs.realpath/old.js", "../../../../fs.realpath/index.js", "../../../../minimatch/lib/path.js", "../../../../balanced-match/index.js", "../../../../brace-expansion/index.js", "../../../../minimatch/minimatch.js", "../../../../inherits/inherits_browser.js", "browser-external:events", "browser-external:assert", "browser-external:util", "../../../../glob/common.js", "../../../../glob/sync.js", "../../../../wrappy/wrappy.js", "../../../../once/once.js", "../../../../inflight/inflight.js", "../../../../glob/glob.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nvar pathModule = require('path');\r\nvar isWindows = process.platform === 'win32';\r\nvar fs = require('fs');\r\n\r\n// JavaScript implementation of realpath, ported from node pre-v6\r\n\r\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\r\n\r\nfunction rethrow() {\r\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\r\n  // is fairly slow to generate.\r\n  var callback;\r\n  if (DEBUG) {\r\n    var backtrace = new Error;\r\n    callback = debugCallback;\r\n  } else\r\n    callback = missingCallback;\r\n\r\n  return callback;\r\n\r\n  function debugCallback(err) {\r\n    if (err) {\r\n      backtrace.message = err.message;\r\n      err = backtrace;\r\n      missingCallback(err);\r\n    }\r\n  }\r\n\r\n  function missingCallback(err) {\r\n    if (err) {\r\n      if (process.throwDeprecation)\r\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\r\n      else if (!process.noDeprecation) {\r\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\r\n        if (process.traceDeprecation)\r\n          console.trace(msg);\r\n        else\r\n          console.error(msg);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction maybeCallback(cb) {\r\n  return typeof cb === 'function' ? cb : rethrow();\r\n}\r\n\r\nvar normalize = pathModule.normalize;\r\n\r\n// Regexp that finds the next partion of a (partial) path\r\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\r\nif (isWindows) {\r\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\r\n} else {\r\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\r\n}\r\n\r\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\r\nif (isWindows) {\r\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\r\n} else {\r\n  var splitRootRe = /^[\\/]*/;\r\n}\r\n\r\nexports.realpathSync = function realpathSync(p, cache) {\r\n  // make p is absolute\r\n  p = pathModule.resolve(p);\r\n\r\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\r\n    return cache[p];\r\n  }\r\n\r\n  var original = p,\r\n      seenLinks = {},\r\n      knownHard = {};\r\n\r\n  // current character position in p\r\n  var pos;\r\n  // the partial path so far, including a trailing slash if any\r\n  var current;\r\n  // the partial path without a trailing slash (except when pointing at a root)\r\n  var base;\r\n  // the partial path scanned in the previous round, with slash\r\n  var previous;\r\n\r\n  start();\r\n\r\n  function start() {\r\n    // Skip over roots\r\n    var m = splitRootRe.exec(p);\r\n    pos = m[0].length;\r\n    current = m[0];\r\n    base = m[0];\r\n    previous = '';\r\n\r\n    // On windows, check that the root exists. On unix there is no need.\r\n    if (isWindows && !knownHard[base]) {\r\n      fs.lstatSync(base);\r\n      knownHard[base] = true;\r\n    }\r\n  }\r\n\r\n  // walk down the path, swapping out linked pathparts for their real\r\n  // values\r\n  // NB: p.length changes.\r\n  while (pos < p.length) {\r\n    // find the next part\r\n    nextPartRe.lastIndex = pos;\r\n    var result = nextPartRe.exec(p);\r\n    previous = current;\r\n    current += result[0];\r\n    base = previous + result[1];\r\n    pos = nextPartRe.lastIndex;\r\n\r\n    // continue if not a symlink\r\n    if (knownHard[base] || (cache && cache[base] === base)) {\r\n      continue;\r\n    }\r\n\r\n    var resolvedLink;\r\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\r\n      // some known symbolic link.  no need to stat again.\r\n      resolvedLink = cache[base];\r\n    } else {\r\n      var stat = fs.lstatSync(base);\r\n      if (!stat.isSymbolicLink()) {\r\n        knownHard[base] = true;\r\n        if (cache) cache[base] = base;\r\n        continue;\r\n      }\r\n\r\n      // read the link if it wasn't read before\r\n      // dev/ino always return 0 on windows, so skip the check.\r\n      var linkTarget = null;\r\n      if (!isWindows) {\r\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\r\n        if (seenLinks.hasOwnProperty(id)) {\r\n          linkTarget = seenLinks[id];\r\n        }\r\n      }\r\n      if (linkTarget === null) {\r\n        fs.statSync(base);\r\n        linkTarget = fs.readlinkSync(base);\r\n      }\r\n      resolvedLink = pathModule.resolve(previous, linkTarget);\r\n      // track this, if given a cache.\r\n      if (cache) cache[base] = resolvedLink;\r\n      if (!isWindows) seenLinks[id] = linkTarget;\r\n    }\r\n\r\n    // resolve the link, then start over\r\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\r\n    start();\r\n  }\r\n\r\n  if (cache) cache[original] = p;\r\n\r\n  return p;\r\n};\r\n\r\n\r\nexports.realpath = function realpath(p, cache, cb) {\r\n  if (typeof cb !== 'function') {\r\n    cb = maybeCallback(cache);\r\n    cache = null;\r\n  }\r\n\r\n  // make p is absolute\r\n  p = pathModule.resolve(p);\r\n\r\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\r\n    return process.nextTick(cb.bind(null, null, cache[p]));\r\n  }\r\n\r\n  var original = p,\r\n      seenLinks = {},\r\n      knownHard = {};\r\n\r\n  // current character position in p\r\n  var pos;\r\n  // the partial path so far, including a trailing slash if any\r\n  var current;\r\n  // the partial path without a trailing slash (except when pointing at a root)\r\n  var base;\r\n  // the partial path scanned in the previous round, with slash\r\n  var previous;\r\n\r\n  start();\r\n\r\n  function start() {\r\n    // Skip over roots\r\n    var m = splitRootRe.exec(p);\r\n    pos = m[0].length;\r\n    current = m[0];\r\n    base = m[0];\r\n    previous = '';\r\n\r\n    // On windows, check that the root exists. On unix there is no need.\r\n    if (isWindows && !knownHard[base]) {\r\n      fs.lstat(base, function(err) {\r\n        if (err) return cb(err);\r\n        knownHard[base] = true;\r\n        LOOP();\r\n      });\r\n    } else {\r\n      process.nextTick(LOOP);\r\n    }\r\n  }\r\n\r\n  // walk down the path, swapping out linked pathparts for their real\r\n  // values\r\n  function LOOP() {\r\n    // stop if scanned past end of path\r\n    if (pos >= p.length) {\r\n      if (cache) cache[original] = p;\r\n      return cb(null, p);\r\n    }\r\n\r\n    // find the next part\r\n    nextPartRe.lastIndex = pos;\r\n    var result = nextPartRe.exec(p);\r\n    previous = current;\r\n    current += result[0];\r\n    base = previous + result[1];\r\n    pos = nextPartRe.lastIndex;\r\n\r\n    // continue if not a symlink\r\n    if (knownHard[base] || (cache && cache[base] === base)) {\r\n      return process.nextTick(LOOP);\r\n    }\r\n\r\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\r\n      // known symbolic link.  no need to stat again.\r\n      return gotResolvedLink(cache[base]);\r\n    }\r\n\r\n    return fs.lstat(base, gotStat);\r\n  }\r\n\r\n  function gotStat(err, stat) {\r\n    if (err) return cb(err);\r\n\r\n    // if not a symlink, skip to the next path part\r\n    if (!stat.isSymbolicLink()) {\r\n      knownHard[base] = true;\r\n      if (cache) cache[base] = base;\r\n      return process.nextTick(LOOP);\r\n    }\r\n\r\n    // stat & read the link if not read before\r\n    // call gotTarget as soon as the link target is known\r\n    // dev/ino always return 0 on windows, so skip the check.\r\n    if (!isWindows) {\r\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\r\n      if (seenLinks.hasOwnProperty(id)) {\r\n        return gotTarget(null, seenLinks[id], base);\r\n      }\r\n    }\r\n    fs.stat(base, function(err) {\r\n      if (err) return cb(err);\r\n\r\n      fs.readlink(base, function(err, target) {\r\n        if (!isWindows) seenLinks[id] = target;\r\n        gotTarget(err, target);\r\n      });\r\n    });\r\n  }\r\n\r\n  function gotTarget(err, target, base) {\r\n    if (err) return cb(err);\r\n\r\n    var resolvedLink = pathModule.resolve(previous, target);\r\n    if (cache) cache[base] = resolvedLink;\r\n    gotResolvedLink(resolvedLink);\r\n  }\r\n\r\n  function gotResolvedLink(resolvedLink) {\r\n    // resolve the link, then start over\r\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\r\n    start();\r\n  }\r\n};\r\n", "module.exports = realpath\r\nrealpath.realpath = realpath\r\nrealpath.sync = realpathSync\r\nrealpath.realpathSync = realpathSync\r\nrealpath.monkeypatch = monkeypatch\r\nrealpath.unmonkeypatch = unmonkeypatch\r\n\r\nvar fs = require('fs')\r\nvar origRealpath = fs.realpath\r\nvar origRealpathSync = fs.realpathSync\r\n\r\nvar version = process.version\r\nvar ok = /^v[0-5]\\./.test(version)\r\nvar old = require('./old.js')\r\n\r\nfunction newError (er) {\r\n  return er && er.syscall === 'realpath' && (\r\n    er.code === 'ELOOP' ||\r\n    er.code === 'ENOMEM' ||\r\n    er.code === 'ENAMETOOLONG'\r\n  )\r\n}\r\n\r\nfunction realpath (p, cache, cb) {\r\n  if (ok) {\r\n    return origRealpath(p, cache, cb)\r\n  }\r\n\r\n  if (typeof cache === 'function') {\r\n    cb = cache\r\n    cache = null\r\n  }\r\n  origRealpath(p, cache, function (er, result) {\r\n    if (newError(er)) {\r\n      old.realpath(p, cache, cb)\r\n    } else {\r\n      cb(er, result)\r\n    }\r\n  })\r\n}\r\n\r\nfunction realpathSync (p, cache) {\r\n  if (ok) {\r\n    return origRealpathSync(p, cache)\r\n  }\r\n\r\n  try {\r\n    return origRealpathSync(p, cache)\r\n  } catch (er) {\r\n    if (newError(er)) {\r\n      return old.realpathSync(p, cache)\r\n    } else {\r\n      throw er\r\n    }\r\n  }\r\n}\r\n\r\nfunction monkeypatch () {\r\n  fs.realpath = realpath\r\n  fs.realpathSync = realpathSync\r\n}\r\n\r\nfunction unmonkeypatch () {\r\n  fs.realpath = origRealpath\r\n  fs.realpathSync = origRealpathSync\r\n}\r\n", "const isWindows = typeof process === 'object' &&\r\n  process &&\r\n  process.platform === 'win32'\r\nmodule.exports = isWindows ? { sep: '\\\\' } : { sep: '/' }\r\n", "'use strict';\r\nmodule.exports = balanced;\r\nfunction balanced(a, b, str) {\r\n  if (a instanceof RegExp) a = maybeMatch(a, str);\r\n  if (b instanceof RegExp) b = maybeMatch(b, str);\r\n\r\n  var r = range(a, b, str);\r\n\r\n  return r && {\r\n    start: r[0],\r\n    end: r[1],\r\n    pre: str.slice(0, r[0]),\r\n    body: str.slice(r[0] + a.length, r[1]),\r\n    post: str.slice(r[1] + b.length)\r\n  };\r\n}\r\n\r\nfunction maybeMatch(reg, str) {\r\n  var m = str.match(reg);\r\n  return m ? m[0] : null;\r\n}\r\n\r\nbalanced.range = range;\r\nfunction range(a, b, str) {\r\n  var begs, beg, left, right, result;\r\n  var ai = str.indexOf(a);\r\n  var bi = str.indexOf(b, ai + 1);\r\n  var i = ai;\r\n\r\n  if (ai >= 0 && bi > 0) {\r\n    if(a===b) {\r\n      return [ai, bi];\r\n    }\r\n    begs = [];\r\n    left = str.length;\r\n\r\n    while (i >= 0 && !result) {\r\n      if (i == ai) {\r\n        begs.push(i);\r\n        ai = str.indexOf(a, i + 1);\r\n      } else if (begs.length == 1) {\r\n        result = [ begs.pop(), bi ];\r\n      } else {\r\n        beg = begs.pop();\r\n        if (beg < left) {\r\n          left = beg;\r\n          right = bi;\r\n        }\r\n\r\n        bi = str.indexOf(b, i + 1);\r\n      }\r\n\r\n      i = ai < bi && ai >= 0 ? ai : bi;\r\n    }\r\n\r\n    if (begs.length) {\r\n      result = [ left, right ];\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n", "var balanced = require('balanced-match');\r\n\r\nmodule.exports = expandTop;\r\n\r\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\r\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\r\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\r\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\r\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\r\n\r\nfunction numeric(str) {\r\n  return parseInt(str, 10) == str\r\n    ? parseInt(str, 10)\r\n    : str.charCodeAt(0);\r\n}\r\n\r\nfunction escapeBraces(str) {\r\n  return str.split('\\\\\\\\').join(escSlash)\r\n            .split('\\\\{').join(escOpen)\r\n            .split('\\\\}').join(escClose)\r\n            .split('\\\\,').join(escComma)\r\n            .split('\\\\.').join(escPeriod);\r\n}\r\n\r\nfunction unescapeBraces(str) {\r\n  return str.split(escSlash).join('\\\\')\r\n            .split(escOpen).join('{')\r\n            .split(escClose).join('}')\r\n            .split(escComma).join(',')\r\n            .split(escPeriod).join('.');\r\n}\r\n\r\n\r\n// Basically just str.split(\",\"), but handling cases\r\n// where we have nested braced sections, which should be\r\n// treated as individual members, like {a,{b,c},d}\r\nfunction parseCommaParts(str) {\r\n  if (!str)\r\n    return [''];\r\n\r\n  var parts = [];\r\n  var m = balanced('{', '}', str);\r\n\r\n  if (!m)\r\n    return str.split(',');\r\n\r\n  var pre = m.pre;\r\n  var body = m.body;\r\n  var post = m.post;\r\n  var p = pre.split(',');\r\n\r\n  p[p.length-1] += '{' + body + '}';\r\n  var postParts = parseCommaParts(post);\r\n  if (post.length) {\r\n    p[p.length-1] += postParts.shift();\r\n    p.push.apply(p, postParts);\r\n  }\r\n\r\n  parts.push.apply(parts, p);\r\n\r\n  return parts;\r\n}\r\n\r\nfunction expandTop(str) {\r\n  if (!str)\r\n    return [];\r\n\r\n  // I don't know why Bash 4.3 does this, but it does.\r\n  // Anything starting with {} will have the first two bytes preserved\r\n  // but *only* at the top level, so {},a}b will not expand to anything,\r\n  // but a{},b}c will be expanded to [a}c,abc].\r\n  // One could argue that this is a bug in Bash, but since the goal of\r\n  // this module is to match Bash's rules, we escape a leading {}\r\n  if (str.substr(0, 2) === '{}') {\r\n    str = '\\\\{\\\\}' + str.substr(2);\r\n  }\r\n\r\n  return expand(escapeBraces(str), true).map(unescapeBraces);\r\n}\r\n\r\nfunction embrace(str) {\r\n  return '{' + str + '}';\r\n}\r\nfunction isPadded(el) {\r\n  return /^-?0\\d/.test(el);\r\n}\r\n\r\nfunction lte(i, y) {\r\n  return i <= y;\r\n}\r\nfunction gte(i, y) {\r\n  return i >= y;\r\n}\r\n\r\nfunction expand(str, isTop) {\r\n  var expansions = [];\r\n\r\n  var m = balanced('{', '}', str);\r\n  if (!m) return [str];\r\n\r\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\r\n  var pre = m.pre;\r\n  var post = m.post.length\r\n    ? expand(m.post, false)\r\n    : [''];\r\n\r\n  if (/\\$$/.test(m.pre)) {    \r\n    for (var k = 0; k < post.length; k++) {\r\n      var expansion = pre+ '{' + m.body + '}' + post[k];\r\n      expansions.push(expansion);\r\n    }\r\n  } else {\r\n    var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\r\n    var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\r\n    var isSequence = isNumericSequence || isAlphaSequence;\r\n    var isOptions = m.body.indexOf(',') >= 0;\r\n    if (!isSequence && !isOptions) {\r\n      // {a},b}\r\n      if (m.post.match(/,.*\\}/)) {\r\n        str = m.pre + '{' + m.body + escClose + m.post;\r\n        return expand(str);\r\n      }\r\n      return [str];\r\n    }\r\n\r\n    var n;\r\n    if (isSequence) {\r\n      n = m.body.split(/\\.\\./);\r\n    } else {\r\n      n = parseCommaParts(m.body);\r\n      if (n.length === 1) {\r\n        // x{{a,b}}y ==> x{a}y x{b}y\r\n        n = expand(n[0], false).map(embrace);\r\n        if (n.length === 1) {\r\n          return post.map(function(p) {\r\n            return m.pre + n[0] + p;\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    // at this point, n is the parts, and we know it's not a comma set\r\n    // with a single entry.\r\n    var N;\r\n\r\n    if (isSequence) {\r\n      var x = numeric(n[0]);\r\n      var y = numeric(n[1]);\r\n      var width = Math.max(n[0].length, n[1].length)\r\n      var incr = n.length == 3\r\n        ? Math.abs(numeric(n[2]))\r\n        : 1;\r\n      var test = lte;\r\n      var reverse = y < x;\r\n      if (reverse) {\r\n        incr *= -1;\r\n        test = gte;\r\n      }\r\n      var pad = n.some(isPadded);\r\n\r\n      N = [];\r\n\r\n      for (var i = x; test(i, y); i += incr) {\r\n        var c;\r\n        if (isAlphaSequence) {\r\n          c = String.fromCharCode(i);\r\n          if (c === '\\\\')\r\n            c = '';\r\n        } else {\r\n          c = String(i);\r\n          if (pad) {\r\n            var need = width - c.length;\r\n            if (need > 0) {\r\n              var z = new Array(need + 1).join('0');\r\n              if (i < 0)\r\n                c = '-' + z + c.slice(1);\r\n              else\r\n                c = z + c;\r\n            }\r\n          }\r\n        }\r\n        N.push(c);\r\n      }\r\n    } else {\r\n      N = [];\r\n\r\n      for (var j = 0; j < n.length; j++) {\r\n        N.push.apply(N, expand(n[j], false));\r\n      }\r\n    }\r\n\r\n    for (var j = 0; j < N.length; j++) {\r\n      for (var k = 0; k < post.length; k++) {\r\n        var expansion = pre + N[j] + post[k];\r\n        if (!isTop || isSequence || expansion)\r\n          expansions.push(expansion);\r\n      }\r\n    }\r\n  }\r\n\r\n  return expansions;\r\n}\r\n\r\n", "const minimatch = module.exports = (p, pattern, options = {}) => {\r\n  assertValidPattern(pattern)\r\n\r\n  // shortcut: comments match nothing.\r\n  if (!options.nocomment && pattern.charAt(0) === '#') {\r\n    return false\r\n  }\r\n\r\n  return new Minimatch(pattern, options).match(p)\r\n}\r\n\r\nmodule.exports = minimatch\r\n\r\nconst path = require('./lib/path.js')\r\nminimatch.sep = path.sep\r\n\r\nconst GLOBSTAR = Symbol('globstar **')\r\nminimatch.GLOBSTAR = GLOBSTAR\r\nconst expand = require('brace-expansion')\r\n\r\nconst plTypes = {\r\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\r\n  '?': { open: '(?:', close: ')?' },\r\n  '+': { open: '(?:', close: ')+' },\r\n  '*': { open: '(?:', close: ')*' },\r\n  '@': { open: '(?:', close: ')' }\r\n}\r\n\r\n// any single thing other than /\r\n// don't need to escape / when using new RegExp()\r\nconst qmark = '[^/]'\r\n\r\n// * => any number of characters\r\nconst star = qmark + '*?'\r\n\r\n// ** when dots are allowed.  Anything goes, except .. and .\r\n// not (^ or / followed by one or two dots followed by $ or /),\r\n// followed by anything, any number of times.\r\nconst twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\r\n\r\n// not a ^ or / followed by a dot,\r\n// followed by anything, any number of times.\r\nconst twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\r\n\r\n// \"abc\" -> { a:true, b:true, c:true }\r\nconst charSet = s => s.split('').reduce((set, c) => {\r\n  set[c] = true\r\n  return set\r\n}, {})\r\n\r\n// characters that need to be escaped in RegExp.\r\nconst reSpecials = charSet('().*{}+?[]^$\\\\!')\r\n\r\n// characters that indicate we have to add the pattern start\r\nconst addPatternStartSet = charSet('[.(')\r\n\r\n// normalizes slashes.\r\nconst slashSplit = /\\/+/\r\n\r\nminimatch.filter = (pattern, options = {}) =>\r\n  (p, i, list) => minimatch(p, pattern, options)\r\n\r\nconst ext = (a, b = {}) => {\r\n  const t = {}\r\n  Object.keys(a).forEach(k => t[k] = a[k])\r\n  Object.keys(b).forEach(k => t[k] = b[k])\r\n  return t\r\n}\r\n\r\nminimatch.defaults = def => {\r\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\r\n    return minimatch\r\n  }\r\n\r\n  const orig = minimatch\r\n\r\n  const m = (p, pattern, options) => orig(p, pattern, ext(def, options))\r\n  m.Minimatch = class Minimatch extends orig.Minimatch {\r\n    constructor (pattern, options) {\r\n      super(pattern, ext(def, options))\r\n    }\r\n  }\r\n  m.Minimatch.defaults = options => orig.defaults(ext(def, options)).Minimatch\r\n  m.filter = (pattern, options) => orig.filter(pattern, ext(def, options))\r\n  m.defaults = options => orig.defaults(ext(def, options))\r\n  m.makeRe = (pattern, options) => orig.makeRe(pattern, ext(def, options))\r\n  m.braceExpand = (pattern, options) => orig.braceExpand(pattern, ext(def, options))\r\n  m.match = (list, pattern, options) => orig.match(list, pattern, ext(def, options))\r\n\r\n  return m\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Brace expansion:\r\n// a{b,c}d -> abd acd\r\n// a{b,}c -> abc ac\r\n// a{0..3}d -> a0d a1d a2d a3d\r\n// a{b,c{d,e}f}g -> abg acdfg acefg\r\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\r\n//\r\n// Invalid sets are not expanded.\r\n// a{2..}b -> a{2..}b\r\n// a{b}c -> a{b}c\r\nminimatch.braceExpand = (pattern, options) => braceExpand(pattern, options)\r\n\r\nconst braceExpand = (pattern, options = {}) => {\r\n  assertValidPattern(pattern)\r\n\r\n  // Thanks to Yeting Li <https://github.com/yetingli> for\r\n  // improving this regexp to avoid a ReDOS vulnerability.\r\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\r\n    // shortcut. no need to expand.\r\n    return [pattern]\r\n  }\r\n\r\n  return expand(pattern)\r\n}\r\n\r\nconst MAX_PATTERN_LENGTH = 1024 * 64\r\nconst assertValidPattern = pattern => {\r\n  if (typeof pattern !== 'string') {\r\n    throw new TypeError('invalid pattern')\r\n  }\r\n\r\n  if (pattern.length > MAX_PATTERN_LENGTH) {\r\n    throw new TypeError('pattern is too long')\r\n  }\r\n}\r\n\r\n// parse a component of the expanded set.\r\n// At this point, no pattern may contain \"/\" in it\r\n// so we're going to return a 2d array, where each entry is the full\r\n// pattern, split on '/', and then turned into a regular expression.\r\n// A regexp is made at the end which joins each array with an\r\n// escaped /, and another full one which joins each regexp with |.\r\n//\r\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\r\n// when it is the *only* thing in a path portion.  Otherwise, any series\r\n// of * is equivalent to a single *.  Globstar behavior is enabled by\r\n// default, and can be disabled by setting options.noglobstar.\r\nconst SUBPARSE = Symbol('subparse')\r\n\r\nminimatch.makeRe = (pattern, options) =>\r\n  new Minimatch(pattern, options || {}).makeRe()\r\n\r\nminimatch.match = (list, pattern, options = {}) => {\r\n  const mm = new Minimatch(pattern, options)\r\n  list = list.filter(f => mm.match(f))\r\n  if (mm.options.nonull && !list.length) {\r\n    list.push(pattern)\r\n  }\r\n  return list\r\n}\r\n\r\n// replace stuff like \\* with *\r\nconst globUnescape = s => s.replace(/\\\\(.)/g, '$1')\r\nconst charUnescape = s => s.replace(/\\\\([^-\\]])/g, '$1')\r\nconst regExpEscape = s => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\r\nconst braExpEscape = s => s.replace(/[[\\]\\\\]/g, '\\\\$&')\r\n\r\nclass Minimatch {\r\n  constructor (pattern, options) {\r\n    assertValidPattern(pattern)\r\n\r\n    if (!options) options = {}\r\n\r\n    this.options = options\r\n    this.set = []\r\n    this.pattern = pattern\r\n    this.windowsPathsNoEscape = !!options.windowsPathsNoEscape ||\r\n      options.allowWindowsEscape === false\r\n    if (this.windowsPathsNoEscape) {\r\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\r\n    }\r\n    this.regexp = null\r\n    this.negate = false\r\n    this.comment = false\r\n    this.empty = false\r\n    this.partial = !!options.partial\r\n\r\n    // make the set of regexps etc.\r\n    this.make()\r\n  }\r\n\r\n  debug () {}\r\n\r\n  make () {\r\n    const pattern = this.pattern\r\n    const options = this.options\r\n\r\n    // empty patterns and comments match nothing.\r\n    if (!options.nocomment && pattern.charAt(0) === '#') {\r\n      this.comment = true\r\n      return\r\n    }\r\n    if (!pattern) {\r\n      this.empty = true\r\n      return\r\n    }\r\n\r\n    // step 1: figure out negation, etc.\r\n    this.parseNegate()\r\n\r\n    // step 2: expand braces\r\n    let set = this.globSet = this.braceExpand()\r\n\r\n    if (options.debug) this.debug = (...args) => console.error(...args)\r\n\r\n    this.debug(this.pattern, set)\r\n\r\n    // step 3: now we have a set, so turn each one into a series of path-portion\r\n    // matching patterns.\r\n    // These will be regexps, except in the case of \"**\", which is\r\n    // set to the GLOBSTAR object for globstar behavior,\r\n    // and will not contain any / characters\r\n    set = this.globParts = set.map(s => s.split(slashSplit))\r\n\r\n    this.debug(this.pattern, set)\r\n\r\n    // glob --> regexps\r\n    set = set.map((s, si, set) => s.map(this.parse, this))\r\n\r\n    this.debug(this.pattern, set)\r\n\r\n    // filter out everything that didn't compile properly.\r\n    set = set.filter(s => s.indexOf(false) === -1)\r\n\r\n    this.debug(this.pattern, set)\r\n\r\n    this.set = set\r\n  }\r\n\r\n  parseNegate () {\r\n    if (this.options.nonegate) return\r\n\r\n    const pattern = this.pattern\r\n    let negate = false\r\n    let negateOffset = 0\r\n\r\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\r\n      negate = !negate\r\n      negateOffset++\r\n    }\r\n\r\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\r\n    this.negate = negate\r\n  }\r\n\r\n  // set partial to true to test if, for example,\r\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\r\n  // Partial means, if you run out of file before you run\r\n  // out of pattern, then that's fine, as long as all\r\n  // the parts match.\r\n  matchOne (file, pattern, partial) {\r\n    var options = this.options\r\n\r\n    this.debug('matchOne',\r\n      { 'this': this, file: file, pattern: pattern })\r\n\r\n    this.debug('matchOne', file.length, pattern.length)\r\n\r\n    for (var fi = 0,\r\n        pi = 0,\r\n        fl = file.length,\r\n        pl = pattern.length\r\n        ; (fi < fl) && (pi < pl)\r\n        ; fi++, pi++) {\r\n      this.debug('matchOne loop')\r\n      var p = pattern[pi]\r\n      var f = file[fi]\r\n\r\n      this.debug(pattern, p, f)\r\n\r\n      // should be impossible.\r\n      // some invalid regexp stuff in the set.\r\n      /* istanbul ignore if */\r\n      if (p === false) return false\r\n\r\n      if (p === GLOBSTAR) {\r\n        this.debug('GLOBSTAR', [pattern, p, f])\r\n\r\n        // \"**\"\r\n        // a/**/b/**/c would match the following:\r\n        // a/b/x/y/z/c\r\n        // a/x/y/z/b/c\r\n        // a/b/x/b/x/c\r\n        // a/b/c\r\n        // To do this, take the rest of the pattern after\r\n        // the **, and see if it would match the file remainder.\r\n        // If so, return success.\r\n        // If not, the ** \"swallows\" a segment, and try again.\r\n        // This is recursively awful.\r\n        //\r\n        // a/**/b/**/c matching a/b/x/y/z/c\r\n        // - a matches a\r\n        // - doublestar\r\n        //   - matchOne(b/x/y/z/c, b/**/c)\r\n        //     - b matches b\r\n        //     - doublestar\r\n        //       - matchOne(x/y/z/c, c) -> no\r\n        //       - matchOne(y/z/c, c) -> no\r\n        //       - matchOne(z/c, c) -> no\r\n        //       - matchOne(c, c) yes, hit\r\n        var fr = fi\r\n        var pr = pi + 1\r\n        if (pr === pl) {\r\n          this.debug('** at the end')\r\n          // a ** at the end will just swallow the rest.\r\n          // We have found a match.\r\n          // however, it will not swallow /.x, unless\r\n          // options.dot is set.\r\n          // . and .. are *never* matched by **, for explosively\r\n          // exponential reasons.\r\n          for (; fi < fl; fi++) {\r\n            if (file[fi] === '.' || file[fi] === '..' ||\r\n              (!options.dot && file[fi].charAt(0) === '.')) return false\r\n          }\r\n          return true\r\n        }\r\n\r\n        // ok, let's see if we can swallow whatever we can.\r\n        while (fr < fl) {\r\n          var swallowee = file[fr]\r\n\r\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\r\n\r\n          // XXX remove this slice.  Just pass the start index.\r\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\r\n            this.debug('globstar found match!', fr, fl, swallowee)\r\n            // found a match.\r\n            return true\r\n          } else {\r\n            // can't swallow \".\" or \"..\" ever.\r\n            // can only swallow \".foo\" when explicitly asked.\r\n            if (swallowee === '.' || swallowee === '..' ||\r\n              (!options.dot && swallowee.charAt(0) === '.')) {\r\n              this.debug('dot detected!', file, fr, pattern, pr)\r\n              break\r\n            }\r\n\r\n            // ** swallows a segment, and continue.\r\n            this.debug('globstar swallow a segment, and continue')\r\n            fr++\r\n          }\r\n        }\r\n\r\n        // no match was found.\r\n        // However, in partial mode, we can't say this is necessarily over.\r\n        // If there's more *pattern* left, then\r\n        /* istanbul ignore if */\r\n        if (partial) {\r\n          // ran out of file\r\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\r\n          if (fr === fl) return true\r\n        }\r\n        return false\r\n      }\r\n\r\n      // something other than **\r\n      // non-magic patterns just have to match exactly\r\n      // patterns with magic have been turned into regexps.\r\n      var hit\r\n      if (typeof p === 'string') {\r\n        hit = f === p\r\n        this.debug('string match', p, f, hit)\r\n      } else {\r\n        hit = f.match(p)\r\n        this.debug('pattern match', p, f, hit)\r\n      }\r\n\r\n      if (!hit) return false\r\n    }\r\n\r\n    // Note: ending in / means that we'll get a final \"\"\r\n    // at the end of the pattern.  This can only match a\r\n    // corresponding \"\" at the end of the file.\r\n    // If the file ends in /, then it can only match a\r\n    // a pattern that ends in /, unless the pattern just\r\n    // doesn't have any more for it. But, a/b/ should *not*\r\n    // match \"a/b/*\", even though \"\" matches against the\r\n    // [^/]*? pattern, except in partial mode, where it might\r\n    // simply not be reached yet.\r\n    // However, a/b/ should still satisfy a/*\r\n\r\n    // now either we fell off the end of the pattern, or we're done.\r\n    if (fi === fl && pi === pl) {\r\n      // ran out of pattern and filename at the same time.\r\n      // an exact hit!\r\n      return true\r\n    } else if (fi === fl) {\r\n      // ran out of file, but still had pattern left.\r\n      // this is ok if we're doing the match as part of\r\n      // a glob fs traversal.\r\n      return partial\r\n    } else /* istanbul ignore else */ if (pi === pl) {\r\n      // ran out of pattern, still have file left.\r\n      // this is only acceptable if we're on the very last\r\n      // empty segment of a file with a trailing slash.\r\n      // a/* should match a/b/\r\n      return (fi === fl - 1) && (file[fi] === '')\r\n    }\r\n\r\n    // should be unreachable.\r\n    /* istanbul ignore next */\r\n    throw new Error('wtf?')\r\n  }\r\n\r\n  braceExpand () {\r\n    return braceExpand(this.pattern, this.options)\r\n  }\r\n\r\n  parse (pattern, isSub) {\r\n    assertValidPattern(pattern)\r\n\r\n    const options = this.options\r\n\r\n    // shortcuts\r\n    if (pattern === '**') {\r\n      if (!options.noglobstar)\r\n        return GLOBSTAR\r\n      else\r\n        pattern = '*'\r\n    }\r\n    if (pattern === '') return ''\r\n\r\n    let re = ''\r\n    let hasMagic = false\r\n    let escaping = false\r\n    // ? => one single character\r\n    const patternListStack = []\r\n    const negativeLists = []\r\n    let stateChar\r\n    let inClass = false\r\n    let reClassStart = -1\r\n    let classStart = -1\r\n    let cs\r\n    let pl\r\n    let sp\r\n    // . and .. never match anything that doesn't start with .,\r\n    // even when options.dot is set.  However, if the pattern\r\n    // starts with ., then traversal patterns can match.\r\n    let dotTravAllowed = pattern.charAt(0) === '.'\r\n    let dotFileAllowed = options.dot || dotTravAllowed\r\n    const patternStart = () =>\r\n      dotTravAllowed\r\n        ? ''\r\n        : dotFileAllowed\r\n        ? '(?!(?:^|\\\\/)\\\\.{1,2}(?:$|\\\\/))'\r\n        : '(?!\\\\.)'\r\n    const subPatternStart = (p) =>\r\n      p.charAt(0) === '.'\r\n        ? ''\r\n        : options.dot\r\n        ? '(?!(?:^|\\\\/)\\\\.{1,2}(?:$|\\\\/))'\r\n        : '(?!\\\\.)'\r\n\r\n\r\n    const clearStateChar = () => {\r\n      if (stateChar) {\r\n        // we had some state-tracking character\r\n        // that wasn't consumed by this pass.\r\n        switch (stateChar) {\r\n          case '*':\r\n            re += star\r\n            hasMagic = true\r\n          break\r\n          case '?':\r\n            re += qmark\r\n            hasMagic = true\r\n          break\r\n          default:\r\n            re += '\\\\' + stateChar\r\n          break\r\n        }\r\n        this.debug('clearStateChar %j %j', stateChar, re)\r\n        stateChar = false\r\n      }\r\n    }\r\n\r\n    for (let i = 0, c; (i < pattern.length) && (c = pattern.charAt(i)); i++) {\r\n      this.debug('%s\\t%s %s %j', pattern, i, re, c)\r\n\r\n      // skip over any that are escaped.\r\n      if (escaping) {\r\n        /* istanbul ignore next - completely not allowed, even escaped. */\r\n        if (c === '/') {\r\n          return false\r\n        }\r\n\r\n        if (reSpecials[c]) {\r\n          re += '\\\\'\r\n        }\r\n        re += c\r\n        escaping = false\r\n        continue\r\n      }\r\n\r\n      switch (c) {\r\n        /* istanbul ignore next */\r\n        case '/': {\r\n          // Should already be path-split by now.\r\n          return false\r\n        }\r\n\r\n        case '\\\\':\r\n          if (inClass && pattern.charAt(i + 1) === '-') {\r\n            re += c\r\n            continue\r\n          }\r\n\r\n          clearStateChar()\r\n          escaping = true\r\n        continue\r\n\r\n        // the various stateChar values\r\n        // for the \"extglob\" stuff.\r\n        case '?':\r\n        case '*':\r\n        case '+':\r\n        case '@':\r\n        case '!':\r\n          this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\r\n\r\n          // all of those are literals inside a class, except that\r\n          // the glob [!a] means [^a] in regexp\r\n          if (inClass) {\r\n            this.debug('  in class')\r\n            if (c === '!' && i === classStart + 1) c = '^'\r\n            re += c\r\n            continue\r\n          }\r\n\r\n          // if we already have a stateChar, then it means\r\n          // that there was something like ** or +? in there.\r\n          // Handle the stateChar, then proceed with this one.\r\n          this.debug('call clearStateChar %j', stateChar)\r\n          clearStateChar()\r\n          stateChar = c\r\n          // if extglob is disabled, then +(asdf|foo) isn't a thing.\r\n          // just clear the statechar *now*, rather than even diving into\r\n          // the patternList stuff.\r\n          if (options.noext) clearStateChar()\r\n        continue\r\n\r\n        case '(': {\r\n          if (inClass) {\r\n            re += '('\r\n            continue\r\n          }\r\n\r\n          if (!stateChar) {\r\n            re += '\\\\('\r\n            continue\r\n          }\r\n\r\n          const plEntry = {\r\n            type: stateChar,\r\n            start: i - 1,\r\n            reStart: re.length,\r\n            open: plTypes[stateChar].open,\r\n            close: plTypes[stateChar].close,\r\n          }\r\n          this.debug(this.pattern, '\\t', plEntry)\r\n          patternListStack.push(plEntry)\r\n          // negation is (?:(?!(?:js)(?:<rest>))[^/]*)\r\n          re += plEntry.open\r\n          // next entry starts with a dot maybe?\r\n          if (plEntry.start === 0 && plEntry.type !== '!') {\r\n            dotTravAllowed = true\r\n            re += subPatternStart(pattern.slice(i + 1))\r\n          }\r\n          this.debug('plType %j %j', stateChar, re)\r\n          stateChar = false\r\n          continue\r\n        }\r\n\r\n        case ')': {\r\n          const plEntry = patternListStack[patternListStack.length - 1]\r\n          if (inClass || !plEntry) {\r\n            re += '\\\\)'\r\n            continue\r\n          }\r\n          patternListStack.pop()\r\n\r\n          // closing an extglob\r\n          clearStateChar()\r\n          hasMagic = true\r\n          pl = plEntry\r\n          // negation is (?:(?!js)[^/]*)\r\n          // The others are (?:<pattern>)<type>\r\n          re += pl.close\r\n          if (pl.type === '!') {\r\n            negativeLists.push(Object.assign(pl, { reEnd: re.length }))\r\n          }\r\n          continue\r\n        }\r\n\r\n        case '|': {\r\n          const plEntry = patternListStack[patternListStack.length - 1]\r\n          if (inClass || !plEntry) {\r\n            re += '\\\\|'\r\n            continue\r\n          }\r\n\r\n          clearStateChar()\r\n          re += '|'\r\n          // next subpattern can start with a dot?\r\n          if (plEntry.start === 0 && plEntry.type !== '!') {\r\n            dotTravAllowed = true\r\n            re += subPatternStart(pattern.slice(i + 1))\r\n          }\r\n          continue\r\n        }\r\n\r\n        // these are mostly the same in regexp and glob\r\n        case '[':\r\n          // swallow any state-tracking char before the [\r\n          clearStateChar()\r\n\r\n          if (inClass) {\r\n            re += '\\\\' + c\r\n            continue\r\n          }\r\n\r\n          inClass = true\r\n          classStart = i\r\n          reClassStart = re.length\r\n          re += c\r\n        continue\r\n\r\n        case ']':\r\n          //  a right bracket shall lose its special\r\n          //  meaning and represent itself in\r\n          //  a bracket expression if it occurs\r\n          //  first in the list.  -- POSIX.2 2.8.3.2\r\n          if (i === classStart + 1 || !inClass) {\r\n            re += '\\\\' + c\r\n            continue\r\n          }\r\n\r\n          // split where the last [ was, make sure we don't have\r\n          // an invalid re. if so, re-walk the contents of the\r\n          // would-be class to re-translate any characters that\r\n          // were passed through as-is\r\n          // TODO: It would probably be faster to determine this\r\n          // without a try/catch and a new RegExp, but it's tricky\r\n          // to do safely.  For now, this is safe and works.\r\n          cs = pattern.substring(classStart + 1, i)\r\n          try {\r\n            RegExp('[' + braExpEscape(charUnescape(cs)) + ']')\r\n            // looks good, finish up the class.\r\n            re += c\r\n          } catch (er) {\r\n            // out of order ranges in JS are errors, but in glob syntax,\r\n            // they're just a range that matches nothing.\r\n            re = re.substring(0, reClassStart) + '(?:$.)' // match nothing ever\r\n          }\r\n          hasMagic = true\r\n          inClass = false\r\n        continue\r\n\r\n        default:\r\n          // swallow any state char that wasn't consumed\r\n          clearStateChar()\r\n\r\n          if (reSpecials[c] && !(c === '^' && inClass)) {\r\n            re += '\\\\'\r\n          }\r\n\r\n          re += c\r\n          break\r\n\r\n      } // switch\r\n    } // for\r\n\r\n    // handle the case where we left a class open.\r\n    // \"[abc\" is valid, equivalent to \"\\[abc\"\r\n    if (inClass) {\r\n      // split where the last [ was, and escape it\r\n      // this is a huge pita.  We now have to re-walk\r\n      // the contents of the would-be class to re-translate\r\n      // any characters that were passed through as-is\r\n      cs = pattern.slice(classStart + 1)\r\n      sp = this.parse(cs, SUBPARSE)\r\n      re = re.substring(0, reClassStart) + '\\\\[' + sp[0]\r\n      hasMagic = hasMagic || sp[1]\r\n    }\r\n\r\n    // handle the case where we had a +( thing at the *end*\r\n    // of the pattern.\r\n    // each pattern list stack adds 3 chars, and we need to go through\r\n    // and escape any | chars that were passed through as-is for the regexp.\r\n    // Go through and escape them, taking care not to double-escape any\r\n    // | chars that were already escaped.\r\n    for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\r\n      let tail\r\n      tail = re.slice(pl.reStart + pl.open.length)\r\n      this.debug('setting tail', re, pl)\r\n      // maybe some even number of \\, then maybe 1 \\, followed by a |\r\n      tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, (_, $1, $2) => {\r\n        /* istanbul ignore else - should already be done */\r\n        if (!$2) {\r\n          // the | isn't already escaped, so escape it.\r\n          $2 = '\\\\'\r\n        }\r\n\r\n        // need to escape all those slashes *again*, without escaping the\r\n        // one that we need for escaping the | character.  As it works out,\r\n        // escaping an even number of slashes can be done by simply repeating\r\n        // it exactly after itself.  That's why this trick works.\r\n        //\r\n        // I am sorry that you have to see this.\r\n        return $1 + $1 + $2 + '|'\r\n      })\r\n\r\n      this.debug('tail=%j\\n   %s', tail, tail, pl, re)\r\n      const t = pl.type === '*' ? star\r\n        : pl.type === '?' ? qmark\r\n        : '\\\\' + pl.type\r\n\r\n      hasMagic = true\r\n      re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\r\n    }\r\n\r\n    // handle trailing things that only matter at the very end.\r\n    clearStateChar()\r\n    if (escaping) {\r\n      // trailing \\\\\r\n      re += '\\\\\\\\'\r\n    }\r\n\r\n    // only need to apply the nodot start if the re starts with\r\n    // something that could conceivably capture a dot\r\n    const addPatternStart = addPatternStartSet[re.charAt(0)]\r\n\r\n    // Hack to work around lack of negative lookbehind in JS\r\n    // A pattern like: *.!(x).!(y|z) needs to ensure that a name\r\n    // like 'a.xyz.yz' doesn't match.  So, the first negative\r\n    // lookahead, has to look ALL the way ahead, to the end of\r\n    // the pattern.\r\n    for (let n = negativeLists.length - 1; n > -1; n--) {\r\n      const nl = negativeLists[n]\r\n\r\n      const nlBefore = re.slice(0, nl.reStart)\r\n      const nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\r\n      let nlAfter = re.slice(nl.reEnd)\r\n      const nlLast = re.slice(nl.reEnd - 8, nl.reEnd) + nlAfter\r\n\r\n      // Handle nested stuff like *(*.js|!(*.json)), where open parens\r\n      // mean that we should *not* include the ) in the bit that is considered\r\n      // \"after\" the negated section.\r\n      const closeParensBefore = nlBefore.split(')').length\r\n      const openParensBefore = nlBefore.split('(').length - closeParensBefore\r\n      let cleanAfter = nlAfter\r\n      for (let i = 0; i < openParensBefore; i++) {\r\n        cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\r\n      }\r\n      nlAfter = cleanAfter\r\n\r\n      const dollar = nlAfter === '' && isSub !== SUBPARSE ? '(?:$|\\\\/)' : ''\r\n\r\n      re = nlBefore + nlFirst + nlAfter + dollar + nlLast\r\n    }\r\n\r\n    // if the re is not \"\" at this point, then we need to make sure\r\n    // it doesn't match against an empty path part.\r\n    // Otherwise a/* will match a/, which it should not.\r\n    if (re !== '' && hasMagic) {\r\n      re = '(?=.)' + re\r\n    }\r\n\r\n    if (addPatternStart) {\r\n      re = patternStart() + re\r\n    }\r\n\r\n    // parsing just a piece of a larger pattern.\r\n    if (isSub === SUBPARSE) {\r\n      return [re, hasMagic]\r\n    }\r\n\r\n    // if it's nocase, and the lcase/uppercase don't match, it's magic\r\n    if (options.nocase && !hasMagic) {\r\n      hasMagic = pattern.toUpperCase() !== pattern.toLowerCase()\r\n    }\r\n\r\n    // skip the regexp for non-magical patterns\r\n    // unescape anything in it, though, so that it'll be\r\n    // an exact match against a file etc.\r\n    if (!hasMagic) {\r\n      return globUnescape(pattern)\r\n    }\r\n\r\n    const flags = options.nocase ? 'i' : ''\r\n    try {\r\n      return Object.assign(new RegExp('^' + re + '$', flags), {\r\n        _glob: pattern,\r\n        _src: re,\r\n      })\r\n    } catch (er) /* istanbul ignore next - should be impossible */ {\r\n      // If it was an invalid regular expression, then it can't match\r\n      // anything.  This trick looks for a character after the end of\r\n      // the string, which is of course impossible, except in multi-line\r\n      // mode, but it's not a /m regex.\r\n      return new RegExp('$.')\r\n    }\r\n  }\r\n\r\n  makeRe () {\r\n    if (this.regexp || this.regexp === false) return this.regexp\r\n\r\n    // at this point, this.set is a 2d array of partial\r\n    // pattern strings, or \"**\".\r\n    //\r\n    // It's better to use .match().  This function shouldn't\r\n    // be used, really, but it's pretty convenient sometimes,\r\n    // when you just want to work with a regex.\r\n    const set = this.set\r\n\r\n    if (!set.length) {\r\n      this.regexp = false\r\n      return this.regexp\r\n    }\r\n    const options = this.options\r\n\r\n    const twoStar = options.noglobstar ? star\r\n      : options.dot ? twoStarDot\r\n      : twoStarNoDot\r\n    const flags = options.nocase ? 'i' : ''\r\n\r\n    // coalesce globstars and regexpify non-globstar patterns\r\n    // if it's the only item, then we just do one twoStar\r\n    // if it's the first, and there are more, prepend (\\/|twoStar\\/)? to next\r\n    // if it's the last, append (\\/twoStar|) to previous\r\n    // if it's in the middle, append (\\/|\\/twoStar\\/) to previous\r\n    // then filter out GLOBSTAR symbols\r\n    let re = set.map(pattern => {\r\n      pattern = pattern.map(p =>\r\n        typeof p === 'string' ? regExpEscape(p)\r\n        : p === GLOBSTAR ? GLOBSTAR\r\n        : p._src\r\n      ).reduce((set, p) => {\r\n        if (!(set[set.length - 1] === GLOBSTAR && p === GLOBSTAR)) {\r\n          set.push(p)\r\n        }\r\n        return set\r\n      }, [])\r\n      pattern.forEach((p, i) => {\r\n        if (p !== GLOBSTAR || pattern[i-1] === GLOBSTAR) {\r\n          return\r\n        }\r\n        if (i === 0) {\r\n          if (pattern.length > 1) {\r\n            pattern[i+1] = '(?:\\\\\\/|' + twoStar + '\\\\\\/)?' + pattern[i+1]\r\n          } else {\r\n            pattern[i] = twoStar\r\n          }\r\n        } else if (i === pattern.length - 1) {\r\n          pattern[i-1] += '(?:\\\\\\/|' + twoStar + ')?'\r\n        } else {\r\n          pattern[i-1] += '(?:\\\\\\/|\\\\\\/' + twoStar + '\\\\\\/)' + pattern[i+1]\r\n          pattern[i+1] = GLOBSTAR\r\n        }\r\n      })\r\n      return pattern.filter(p => p !== GLOBSTAR).join('/')\r\n    }).join('|')\r\n\r\n    // must match entire pattern\r\n    // ending in a * or ** will make it less strict.\r\n    re = '^(?:' + re + ')$'\r\n\r\n    // can match anything, as long as it's not this.\r\n    if (this.negate) re = '^(?!' + re + ').*$'\r\n\r\n    try {\r\n      this.regexp = new RegExp(re, flags)\r\n    } catch (ex) /* istanbul ignore next - should be impossible */ {\r\n      this.regexp = false\r\n    }\r\n    return this.regexp\r\n  }\r\n\r\n  match (f, partial = this.partial) {\r\n    this.debug('match', f, this.pattern)\r\n    // short-circuit in the case of busted things.\r\n    // comments, etc.\r\n    if (this.comment) return false\r\n    if (this.empty) return f === ''\r\n\r\n    if (f === '/' && partial) return true\r\n\r\n    const options = this.options\r\n\r\n    // windows: need to use /, not \\\r\n    if (path.sep !== '/') {\r\n      f = f.split(path.sep).join('/')\r\n    }\r\n\r\n    // treat the test path as a set of pathparts.\r\n    f = f.split(slashSplit)\r\n    this.debug(this.pattern, 'split', f)\r\n\r\n    // just ONE of the pattern sets in this.set needs to match\r\n    // in order for it to be valid.  If negating, then just one\r\n    // match means that we have failed.\r\n    // Either way, return on the first hit.\r\n\r\n    const set = this.set\r\n    this.debug(this.pattern, 'set', set)\r\n\r\n    // Find the basename of the path by looking for the last non-empty segment\r\n    let filename\r\n    for (let i = f.length - 1; i >= 0; i--) {\r\n      filename = f[i]\r\n      if (filename) break\r\n    }\r\n\r\n    for (let i = 0; i < set.length; i++) {\r\n      const pattern = set[i]\r\n      let file = f\r\n      if (options.matchBase && pattern.length === 1) {\r\n        file = [filename]\r\n      }\r\n      const hit = this.matchOne(file, pattern, partial)\r\n      if (hit) {\r\n        if (options.flipNegate) return true\r\n        return !this.negate\r\n      }\r\n    }\r\n\r\n    // didn't get any hits.  this is success if it's a negative\r\n    // pattern, failure otherwise.\r\n    if (options.flipNegate) return false\r\n    return this.negate\r\n  }\r\n\r\n  static defaults (def) {\r\n    return minimatch.defaults(def).Minimatch\r\n  }\r\n}\r\n\r\nminimatch.Minimatch = Minimatch\r\n", "if (typeof Object.create === 'function') {\r\n  // implementation from standard node.js 'util' module\r\n  module.exports = function inherits(ctor, superCtor) {\r\n    if (superCtor) {\r\n      ctor.super_ = superCtor\r\n      ctor.prototype = Object.create(superCtor.prototype, {\r\n        constructor: {\r\n          value: ctor,\r\n          enumerable: false,\r\n          writable: true,\r\n          configurable: true\r\n        }\r\n      })\r\n    }\r\n  };\r\n} else {\r\n  // old school shim for old browsers\r\n  module.exports = function inherits(ctor, superCtor) {\r\n    if (superCtor) {\r\n      ctor.super_ = superCtor\r\n      var TempCtor = function () {}\r\n      TempCtor.prototype = superCtor.prototype\r\n      ctor.prototype = new TempCtor()\r\n      ctor.prototype.constructor = ctor\r\n    }\r\n  }\r\n}\r\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"events\" has been externalized for browser compatibility. Cannot access \"events.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"assert\" has been externalized for browser compatibility. Cannot access \"assert.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"util\" has been externalized for browser compatibility. Cannot access \"util.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "exports.setopts = setopts\r\nexports.ownProp = ownProp\r\nexports.makeAbs = makeAbs\r\nexports.finish = finish\r\nexports.mark = mark\r\nexports.isIgnored = isIgnored\r\nexports.childrenIgnored = childrenIgnored\r\n\r\nfunction ownProp (obj, field) {\r\n  return Object.prototype.hasOwnProperty.call(obj, field)\r\n}\r\n\r\nvar fs = require(\"fs\")\r\nvar path = require(\"path\")\r\nvar minimatch = require(\"minimatch\")\r\nvar isAbsolute = require(\"path\").isAbsolute\r\nvar Minimatch = minimatch.Minimatch\r\n\r\nfunction alphasort (a, b) {\r\n  return a.localeCompare(b, 'en')\r\n}\r\n\r\nfunction setupIgnores (self, options) {\r\n  self.ignore = options.ignore || []\r\n\r\n  if (!Array.isArray(self.ignore))\r\n    self.ignore = [self.ignore]\r\n\r\n  if (self.ignore.length) {\r\n    self.ignore = self.ignore.map(ignoreMap)\r\n  }\r\n}\r\n\r\n// ignore patterns are always in dot:true mode.\r\nfunction ignoreMap (pattern) {\r\n  var gmatcher = null\r\n  if (pattern.slice(-3) === '/**') {\r\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\r\n    gmatcher = new Minimatch(gpattern, { dot: true })\r\n  }\r\n\r\n  return {\r\n    matcher: new Minimatch(pattern, { dot: true }),\r\n    gmatcher: gmatcher\r\n  }\r\n}\r\n\r\nfunction setopts (self, pattern, options) {\r\n  if (!options)\r\n    options = {}\r\n\r\n  // base-matching: just use globstar for that.\r\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\r\n    if (options.noglobstar) {\r\n      throw new Error(\"base matching requires globstar\")\r\n    }\r\n    pattern = \"**/\" + pattern\r\n  }\r\n\r\n  self.windowsPathsNoEscape = !!options.windowsPathsNoEscape ||\r\n    options.allowWindowsEscape === false\r\n  if (self.windowsPathsNoEscape) {\r\n    pattern = pattern.replace(/\\\\/g, '/')\r\n  }\r\n\r\n  self.silent = !!options.silent\r\n  self.pattern = pattern\r\n  self.strict = options.strict !== false\r\n  self.realpath = !!options.realpath\r\n  self.realpathCache = options.realpathCache || Object.create(null)\r\n  self.follow = !!options.follow\r\n  self.dot = !!options.dot\r\n  self.mark = !!options.mark\r\n  self.nodir = !!options.nodir\r\n  if (self.nodir)\r\n    self.mark = true\r\n  self.sync = !!options.sync\r\n  self.nounique = !!options.nounique\r\n  self.nonull = !!options.nonull\r\n  self.nosort = !!options.nosort\r\n  self.nocase = !!options.nocase\r\n  self.stat = !!options.stat\r\n  self.noprocess = !!options.noprocess\r\n  self.absolute = !!options.absolute\r\n  self.fs = options.fs || fs\r\n\r\n  self.maxLength = options.maxLength || Infinity\r\n  self.cache = options.cache || Object.create(null)\r\n  self.statCache = options.statCache || Object.create(null)\r\n  self.symlinks = options.symlinks || Object.create(null)\r\n\r\n  setupIgnores(self, options)\r\n\r\n  self.changedCwd = false\r\n  var cwd = process.cwd()\r\n  if (!ownProp(options, \"cwd\"))\r\n    self.cwd = path.resolve(cwd)\r\n  else {\r\n    self.cwd = path.resolve(options.cwd)\r\n    self.changedCwd = self.cwd !== cwd\r\n  }\r\n\r\n  self.root = options.root || path.resolve(self.cwd, \"/\")\r\n  self.root = path.resolve(self.root)\r\n\r\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\r\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\r\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\r\n  self.nomount = !!options.nomount\r\n\r\n  if (process.platform === \"win32\") {\r\n    self.root = self.root.replace(/\\\\/g, \"/\")\r\n    self.cwd = self.cwd.replace(/\\\\/g, \"/\")\r\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\r\n  }\r\n\r\n  // disable comments and negation in Minimatch.\r\n  // Note that they are not supported in Glob itself anyway.\r\n  options.nonegate = true\r\n  options.nocomment = true\r\n\r\n  self.minimatch = new Minimatch(pattern, options)\r\n  self.options = self.minimatch.options\r\n}\r\n\r\nfunction finish (self) {\r\n  var nou = self.nounique\r\n  var all = nou ? [] : Object.create(null)\r\n\r\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\r\n    var matches = self.matches[i]\r\n    if (!matches || Object.keys(matches).length === 0) {\r\n      if (self.nonull) {\r\n        // do like the shell, and spit out the literal glob\r\n        var literal = self.minimatch.globSet[i]\r\n        if (nou)\r\n          all.push(literal)\r\n        else\r\n          all[literal] = true\r\n      }\r\n    } else {\r\n      // had matches\r\n      var m = Object.keys(matches)\r\n      if (nou)\r\n        all.push.apply(all, m)\r\n      else\r\n        m.forEach(function (m) {\r\n          all[m] = true\r\n        })\r\n    }\r\n  }\r\n\r\n  if (!nou)\r\n    all = Object.keys(all)\r\n\r\n  if (!self.nosort)\r\n    all = all.sort(alphasort)\r\n\r\n  // at *some* point we statted all of these\r\n  if (self.mark) {\r\n    for (var i = 0; i < all.length; i++) {\r\n      all[i] = self._mark(all[i])\r\n    }\r\n    if (self.nodir) {\r\n      all = all.filter(function (e) {\r\n        var notDir = !(/\\/$/.test(e))\r\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\r\n        if (notDir && c)\r\n          notDir = c !== 'DIR' && !Array.isArray(c)\r\n        return notDir\r\n      })\r\n    }\r\n  }\r\n\r\n  if (self.ignore.length)\r\n    all = all.filter(function(m) {\r\n      return !isIgnored(self, m)\r\n    })\r\n\r\n  self.found = all\r\n}\r\n\r\nfunction mark (self, p) {\r\n  var abs = makeAbs(self, p)\r\n  var c = self.cache[abs]\r\n  var m = p\r\n  if (c) {\r\n    var isDir = c === 'DIR' || Array.isArray(c)\r\n    var slash = p.slice(-1) === '/'\r\n\r\n    if (isDir && !slash)\r\n      m += '/'\r\n    else if (!isDir && slash)\r\n      m = m.slice(0, -1)\r\n\r\n    if (m !== p) {\r\n      var mabs = makeAbs(self, m)\r\n      self.statCache[mabs] = self.statCache[abs]\r\n      self.cache[mabs] = self.cache[abs]\r\n    }\r\n  }\r\n\r\n  return m\r\n}\r\n\r\n// lotta situps...\r\nfunction makeAbs (self, f) {\r\n  var abs = f\r\n  if (f.charAt(0) === '/') {\r\n    abs = path.join(self.root, f)\r\n  } else if (isAbsolute(f) || f === '') {\r\n    abs = f\r\n  } else if (self.changedCwd) {\r\n    abs = path.resolve(self.cwd, f)\r\n  } else {\r\n    abs = path.resolve(f)\r\n  }\r\n\r\n  if (process.platform === 'win32')\r\n    abs = abs.replace(/\\\\/g, '/')\r\n\r\n  return abs\r\n}\r\n\r\n\r\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\r\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\r\nfunction isIgnored (self, path) {\r\n  if (!self.ignore.length)\r\n    return false\r\n\r\n  return self.ignore.some(function(item) {\r\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\r\n  })\r\n}\r\n\r\nfunction childrenIgnored (self, path) {\r\n  if (!self.ignore.length)\r\n    return false\r\n\r\n  return self.ignore.some(function(item) {\r\n    return !!(item.gmatcher && item.gmatcher.match(path))\r\n  })\r\n}\r\n", "module.exports = globSync\r\nglobSync.GlobSync = GlobSync\r\n\r\nvar rp = require('fs.realpath')\r\nvar minimatch = require('minimatch')\r\nvar Minimatch = minimatch.Minimatch\r\nvar Glob = require('./glob.js').Glob\r\nvar util = require('util')\r\nvar path = require('path')\r\nvar assert = require('assert')\r\nvar isAbsolute = require('path').isAbsolute\r\nvar common = require('./common.js')\r\nvar setopts = common.setopts\r\nvar ownProp = common.ownProp\r\nvar childrenIgnored = common.childrenIgnored\r\nvar isIgnored = common.isIgnored\r\n\r\nfunction globSync (pattern, options) {\r\n  if (typeof options === 'function' || arguments.length === 3)\r\n    throw new TypeError('callback provided to sync glob\\n'+\r\n                        'See: https://github.com/isaacs/node-glob/issues/167')\r\n\r\n  return new GlobSync(pattern, options).found\r\n}\r\n\r\nfunction GlobSync (pattern, options) {\r\n  if (!pattern)\r\n    throw new Error('must provide pattern')\r\n\r\n  if (typeof options === 'function' || arguments.length === 3)\r\n    throw new TypeError('callback provided to sync glob\\n'+\r\n                        'See: https://github.com/isaacs/node-glob/issues/167')\r\n\r\n  if (!(this instanceof GlobSync))\r\n    return new GlobSync(pattern, options)\r\n\r\n  setopts(this, pattern, options)\r\n\r\n  if (this.noprocess)\r\n    return this\r\n\r\n  var n = this.minimatch.set.length\r\n  this.matches = new Array(n)\r\n  for (var i = 0; i < n; i ++) {\r\n    this._process(this.minimatch.set[i], i, false)\r\n  }\r\n  this._finish()\r\n}\r\n\r\nGlobSync.prototype._finish = function () {\r\n  assert.ok(this instanceof GlobSync)\r\n  if (this.realpath) {\r\n    var self = this\r\n    this.matches.forEach(function (matchset, index) {\r\n      var set = self.matches[index] = Object.create(null)\r\n      for (var p in matchset) {\r\n        try {\r\n          p = self._makeAbs(p)\r\n          var real = rp.realpathSync(p, self.realpathCache)\r\n          set[real] = true\r\n        } catch (er) {\r\n          if (er.syscall === 'stat')\r\n            set[self._makeAbs(p)] = true\r\n          else\r\n            throw er\r\n        }\r\n      }\r\n    })\r\n  }\r\n  common.finish(this)\r\n}\r\n\r\n\r\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\r\n  assert.ok(this instanceof GlobSync)\r\n\r\n  // Get the first [n] parts of pattern that are all strings.\r\n  var n = 0\r\n  while (typeof pattern[n] === 'string') {\r\n    n ++\r\n  }\r\n  // now n is the index of the first one that is *not* a string.\r\n\r\n  // See if there's anything else\r\n  var prefix\r\n  switch (n) {\r\n    // if not, then this is rather simple\r\n    case pattern.length:\r\n      this._processSimple(pattern.join('/'), index)\r\n      return\r\n\r\n    case 0:\r\n      // pattern *starts* with some non-trivial item.\r\n      // going to readdir(cwd), but not include the prefix in matches.\r\n      prefix = null\r\n      break\r\n\r\n    default:\r\n      // pattern has some string bits in the front.\r\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\r\n      // or 'relative' like '../baz'\r\n      prefix = pattern.slice(0, n).join('/')\r\n      break\r\n  }\r\n\r\n  var remain = pattern.slice(n)\r\n\r\n  // get the list of entries.\r\n  var read\r\n  if (prefix === null)\r\n    read = '.'\r\n  else if (isAbsolute(prefix) ||\r\n      isAbsolute(pattern.map(function (p) {\r\n        return typeof p === 'string' ? p : '[*]'\r\n      }).join('/'))) {\r\n    if (!prefix || !isAbsolute(prefix))\r\n      prefix = '/' + prefix\r\n    read = prefix\r\n  } else\r\n    read = prefix\r\n\r\n  var abs = this._makeAbs(read)\r\n\r\n  //if ignored, skip processing\r\n  if (childrenIgnored(this, read))\r\n    return\r\n\r\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\r\n  if (isGlobStar)\r\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\r\n  else\r\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\r\n}\r\n\r\n\r\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\r\n  var entries = this._readdir(abs, inGlobStar)\r\n\r\n  // if the abs isn't a dir, then nothing can match!\r\n  if (!entries)\r\n    return\r\n\r\n  // It will only match dot entries if it starts with a dot, or if\r\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\r\n  var pn = remain[0]\r\n  var negate = !!this.minimatch.negate\r\n  var rawGlob = pn._glob\r\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\r\n\r\n  var matchedEntries = []\r\n  for (var i = 0; i < entries.length; i++) {\r\n    var e = entries[i]\r\n    if (e.charAt(0) !== '.' || dotOk) {\r\n      var m\r\n      if (negate && !prefix) {\r\n        m = !e.match(pn)\r\n      } else {\r\n        m = e.match(pn)\r\n      }\r\n      if (m)\r\n        matchedEntries.push(e)\r\n    }\r\n  }\r\n\r\n  var len = matchedEntries.length\r\n  // If there are no matched entries, then nothing matches.\r\n  if (len === 0)\r\n    return\r\n\r\n  // if this is the last remaining pattern bit, then no need for\r\n  // an additional stat *unless* the user has specified mark or\r\n  // stat explicitly.  We know they exist, since readdir returned\r\n  // them.\r\n\r\n  if (remain.length === 1 && !this.mark && !this.stat) {\r\n    if (!this.matches[index])\r\n      this.matches[index] = Object.create(null)\r\n\r\n    for (var i = 0; i < len; i ++) {\r\n      var e = matchedEntries[i]\r\n      if (prefix) {\r\n        if (prefix.slice(-1) !== '/')\r\n          e = prefix + '/' + e\r\n        else\r\n          e = prefix + e\r\n      }\r\n\r\n      if (e.charAt(0) === '/' && !this.nomount) {\r\n        e = path.join(this.root, e)\r\n      }\r\n      this._emitMatch(index, e)\r\n    }\r\n    // This was the last one, and no stats were needed\r\n    return\r\n  }\r\n\r\n  // now test all matched entries as stand-ins for that part\r\n  // of the pattern.\r\n  remain.shift()\r\n  for (var i = 0; i < len; i ++) {\r\n    var e = matchedEntries[i]\r\n    var newPattern\r\n    if (prefix)\r\n      newPattern = [prefix, e]\r\n    else\r\n      newPattern = [e]\r\n    this._process(newPattern.concat(remain), index, inGlobStar)\r\n  }\r\n}\r\n\r\n\r\nGlobSync.prototype._emitMatch = function (index, e) {\r\n  if (isIgnored(this, e))\r\n    return\r\n\r\n  var abs = this._makeAbs(e)\r\n\r\n  if (this.mark)\r\n    e = this._mark(e)\r\n\r\n  if (this.absolute) {\r\n    e = abs\r\n  }\r\n\r\n  if (this.matches[index][e])\r\n    return\r\n\r\n  if (this.nodir) {\r\n    var c = this.cache[abs]\r\n    if (c === 'DIR' || Array.isArray(c))\r\n      return\r\n  }\r\n\r\n  this.matches[index][e] = true\r\n\r\n  if (this.stat)\r\n    this._stat(e)\r\n}\r\n\r\n\r\nGlobSync.prototype._readdirInGlobStar = function (abs) {\r\n  // follow all symlinked directories forever\r\n  // just proceed as if this is a non-globstar situation\r\n  if (this.follow)\r\n    return this._readdir(abs, false)\r\n\r\n  var entries\r\n  var lstat\r\n  var stat\r\n  try {\r\n    lstat = this.fs.lstatSync(abs)\r\n  } catch (er) {\r\n    if (er.code === 'ENOENT') {\r\n      // lstat failed, doesn't exist\r\n      return null\r\n    }\r\n  }\r\n\r\n  var isSym = lstat && lstat.isSymbolicLink()\r\n  this.symlinks[abs] = isSym\r\n\r\n  // If it's not a symlink or a dir, then it's definitely a regular file.\r\n  // don't bother doing a readdir in that case.\r\n  if (!isSym && lstat && !lstat.isDirectory())\r\n    this.cache[abs] = 'FILE'\r\n  else\r\n    entries = this._readdir(abs, false)\r\n\r\n  return entries\r\n}\r\n\r\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\r\n  var entries\r\n\r\n  if (inGlobStar && !ownProp(this.symlinks, abs))\r\n    return this._readdirInGlobStar(abs)\r\n\r\n  if (ownProp(this.cache, abs)) {\r\n    var c = this.cache[abs]\r\n    if (!c || c === 'FILE')\r\n      return null\r\n\r\n    if (Array.isArray(c))\r\n      return c\r\n  }\r\n\r\n  try {\r\n    return this._readdirEntries(abs, this.fs.readdirSync(abs))\r\n  } catch (er) {\r\n    this._readdirError(abs, er)\r\n    return null\r\n  }\r\n}\r\n\r\nGlobSync.prototype._readdirEntries = function (abs, entries) {\r\n  // if we haven't asked to stat everything, then just\r\n  // assume that everything in there exists, so we can avoid\r\n  // having to stat it a second time.\r\n  if (!this.mark && !this.stat) {\r\n    for (var i = 0; i < entries.length; i ++) {\r\n      var e = entries[i]\r\n      if (abs === '/')\r\n        e = abs + e\r\n      else\r\n        e = abs + '/' + e\r\n      this.cache[e] = true\r\n    }\r\n  }\r\n\r\n  this.cache[abs] = entries\r\n\r\n  // mark and cache dir-ness\r\n  return entries\r\n}\r\n\r\nGlobSync.prototype._readdirError = function (f, er) {\r\n  // handle errors, and cache the information\r\n  switch (er.code) {\r\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\r\n    case 'ENOTDIR': // totally normal. means it *does* exist.\r\n      var abs = this._makeAbs(f)\r\n      this.cache[abs] = 'FILE'\r\n      if (abs === this.cwdAbs) {\r\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\r\n        error.path = this.cwd\r\n        error.code = er.code\r\n        throw error\r\n      }\r\n      break\r\n\r\n    case 'ENOENT': // not terribly unusual\r\n    case 'ELOOP':\r\n    case 'ENAMETOOLONG':\r\n    case 'UNKNOWN':\r\n      this.cache[this._makeAbs(f)] = false\r\n      break\r\n\r\n    default: // some unusual error.  Treat as failure.\r\n      this.cache[this._makeAbs(f)] = false\r\n      if (this.strict)\r\n        throw er\r\n      if (!this.silent)\r\n        console.error('glob error', er)\r\n      break\r\n  }\r\n}\r\n\r\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\r\n\r\n  var entries = this._readdir(abs, inGlobStar)\r\n\r\n  // no entries means not a dir, so it can never have matches\r\n  // foo.txt/** doesn't match foo.txt\r\n  if (!entries)\r\n    return\r\n\r\n  // test without the globstar, and with every child both below\r\n  // and replacing the globstar.\r\n  var remainWithoutGlobStar = remain.slice(1)\r\n  var gspref = prefix ? [ prefix ] : []\r\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\r\n\r\n  // the noGlobStar pattern exits the inGlobStar state\r\n  this._process(noGlobStar, index, false)\r\n\r\n  var len = entries.length\r\n  var isSym = this.symlinks[abs]\r\n\r\n  // If it's a symlink, and we're in a globstar, then stop\r\n  if (isSym && inGlobStar)\r\n    return\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    var e = entries[i]\r\n    if (e.charAt(0) === '.' && !this.dot)\r\n      continue\r\n\r\n    // these two cases enter the inGlobStar state\r\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\r\n    this._process(instead, index, true)\r\n\r\n    var below = gspref.concat(entries[i], remain)\r\n    this._process(below, index, true)\r\n  }\r\n}\r\n\r\nGlobSync.prototype._processSimple = function (prefix, index) {\r\n  // XXX review this.  Shouldn't it be doing the mounting etc\r\n  // before doing stat?  kinda weird?\r\n  var exists = this._stat(prefix)\r\n\r\n  if (!this.matches[index])\r\n    this.matches[index] = Object.create(null)\r\n\r\n  // If it doesn't exist, then just mark the lack of results\r\n  if (!exists)\r\n    return\r\n\r\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\r\n    var trail = /[\\/\\\\]$/.test(prefix)\r\n    if (prefix.charAt(0) === '/') {\r\n      prefix = path.join(this.root, prefix)\r\n    } else {\r\n      prefix = path.resolve(this.root, prefix)\r\n      if (trail)\r\n        prefix += '/'\r\n    }\r\n  }\r\n\r\n  if (process.platform === 'win32')\r\n    prefix = prefix.replace(/\\\\/g, '/')\r\n\r\n  // Mark this as a match\r\n  this._emitMatch(index, prefix)\r\n}\r\n\r\n// Returns either 'DIR', 'FILE', or false\r\nGlobSync.prototype._stat = function (f) {\r\n  var abs = this._makeAbs(f)\r\n  var needDir = f.slice(-1) === '/'\r\n\r\n  if (f.length > this.maxLength)\r\n    return false\r\n\r\n  if (!this.stat && ownProp(this.cache, abs)) {\r\n    var c = this.cache[abs]\r\n\r\n    if (Array.isArray(c))\r\n      c = 'DIR'\r\n\r\n    // It exists, but maybe not how we need it\r\n    if (!needDir || c === 'DIR')\r\n      return c\r\n\r\n    if (needDir && c === 'FILE')\r\n      return false\r\n\r\n    // otherwise we have to stat, because maybe c=true\r\n    // if we know it exists, but not what it is.\r\n  }\r\n\r\n  var exists\r\n  var stat = this.statCache[abs]\r\n  if (!stat) {\r\n    var lstat\r\n    try {\r\n      lstat = this.fs.lstatSync(abs)\r\n    } catch (er) {\r\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\r\n        this.statCache[abs] = false\r\n        return false\r\n      }\r\n    }\r\n\r\n    if (lstat && lstat.isSymbolicLink()) {\r\n      try {\r\n        stat = this.fs.statSync(abs)\r\n      } catch (er) {\r\n        stat = lstat\r\n      }\r\n    } else {\r\n      stat = lstat\r\n    }\r\n  }\r\n\r\n  this.statCache[abs] = stat\r\n\r\n  var c = true\r\n  if (stat)\r\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\r\n\r\n  this.cache[abs] = this.cache[abs] || c\r\n\r\n  if (needDir && c === 'FILE')\r\n    return false\r\n\r\n  return c\r\n}\r\n\r\nGlobSync.prototype._mark = function (p) {\r\n  return common.mark(this, p)\r\n}\r\n\r\nGlobSync.prototype._makeAbs = function (f) {\r\n  return common.makeAbs(this, f)\r\n}\r\n", "// Returns a wrapper function that returns a wrapped callback\r\n// The wrapper function should do some stuff, and return a\r\n// presumably different callback function.\r\n// This makes sure that own properties are retained, so that\r\n// decorations and such are not lost along the way.\r\nmodule.exports = wrappy\r\nfunction wrappy (fn, cb) {\r\n  if (fn && cb) return wrappy(fn)(cb)\r\n\r\n  if (typeof fn !== 'function')\r\n    throw new TypeError('need wrapper function')\r\n\r\n  Object.keys(fn).forEach(function (k) {\r\n    wrapper[k] = fn[k]\r\n  })\r\n\r\n  return wrapper\r\n\r\n  function wrapper() {\r\n    var args = new Array(arguments.length)\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i]\r\n    }\r\n    var ret = fn.apply(this, args)\r\n    var cb = args[args.length-1]\r\n    if (typeof ret === 'function' && ret !== cb) {\r\n      Object.keys(cb).forEach(function (k) {\r\n        ret[k] = cb[k]\r\n      })\r\n    }\r\n    return ret\r\n  }\r\n}\r\n", "var wrappy = require('wrappy')\r\nmodule.exports = wrappy(once)\r\nmodule.exports.strict = wrappy(onceStrict)\r\n\r\nonce.proto = once(function () {\r\n  Object.defineProperty(Function.prototype, 'once', {\r\n    value: function () {\r\n      return once(this)\r\n    },\r\n    configurable: true\r\n  })\r\n\r\n  Object.defineProperty(Function.prototype, 'onceStrict', {\r\n    value: function () {\r\n      return onceStrict(this)\r\n    },\r\n    configurable: true\r\n  })\r\n})\r\n\r\nfunction once (fn) {\r\n  var f = function () {\r\n    if (f.called) return f.value\r\n    f.called = true\r\n    return f.value = fn.apply(this, arguments)\r\n  }\r\n  f.called = false\r\n  return f\r\n}\r\n\r\nfunction onceStrict (fn) {\r\n  var f = function () {\r\n    if (f.called)\r\n      throw new Error(f.onceError)\r\n    f.called = true\r\n    return f.value = fn.apply(this, arguments)\r\n  }\r\n  var name = fn.name || 'Function wrapped with `once`'\r\n  f.onceError = name + \" shouldn't be called more than once\"\r\n  f.called = false\r\n  return f\r\n}\r\n", "var wrappy = require('wrappy')\r\nvar reqs = Object.create(null)\r\nvar once = require('once')\r\n\r\nmodule.exports = wrappy(inflight)\r\n\r\nfunction inflight (key, cb) {\r\n  if (reqs[key]) {\r\n    reqs[key].push(cb)\r\n    return null\r\n  } else {\r\n    reqs[key] = [cb]\r\n    return makeres(key)\r\n  }\r\n}\r\n\r\nfunction makeres (key) {\r\n  return once(function RES () {\r\n    var cbs = reqs[key]\r\n    var len = cbs.length\r\n    var args = slice(arguments)\r\n\r\n    // XXX It's somewhat ambiguous whether a new callback added in this\r\n    // pass should be queued for later execution if something in the\r\n    // list of callbacks throws, or if it should just be discarded.\r\n    // However, it's such an edge case that it hardly matters, and either\r\n    // choice is likely as surprising as the other.\r\n    // As it happens, we do go ahead and schedule it for later execution.\r\n    try {\r\n      for (var i = 0; i < len; i++) {\r\n        cbs[i].apply(null, args)\r\n      }\r\n    } finally {\r\n      if (cbs.length > len) {\r\n        // added more in the interim.\r\n        // de-zalgo, just in case, but don't call again.\r\n        cbs.splice(0, len)\r\n        process.nextTick(function () {\r\n          RES.apply(null, args)\r\n        })\r\n      } else {\r\n        delete reqs[key]\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nfunction slice (args) {\r\n  var length = args.length\r\n  var array = []\r\n\r\n  for (var i = 0; i < length; i++) array[i] = args[i]\r\n  return array\r\n}\r\n", "// Approach:\r\n//\r\n// 1. Get the minimatch set\r\n// 2. For each pattern in the set, PROCESS(pattern, false)\r\n// 3. Store matches per-set, then uniq them\r\n//\r\n// PROCESS(pattern, inGlobStar)\r\n// Get the first [n] items from pattern that are all strings\r\n// Join these together.  This is PREFIX.\r\n//   If there is no more remaining, then stat(PREFIX) and\r\n//   add to matches if it succeeds.  END.\r\n//\r\n// If inGlobStar and PREFIX is symlink and points to dir\r\n//   set ENTRIES = []\r\n// else readdir(PREFIX) as ENTRIES\r\n//   If fail, END\r\n//\r\n// with ENTRIES\r\n//   If pattern[n] is GLOBSTAR\r\n//     // handle the case where the globstar match is empty\r\n//     // by pruning it out, and testing the resulting pattern\r\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\r\n//     // handle other cases.\r\n//     for ENTRY in ENTRIES (not dotfiles)\r\n//       // attach globstar + tail onto the entry\r\n//       // Mark that this entry is a globstar match\r\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\r\n//\r\n//   else // not globstar\r\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\r\n//       Test ENTRY against pattern[n]\r\n//       If fails, continue\r\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\r\n//\r\n// Caveat:\r\n//   Cache all stats and readdirs results to minimize syscall.  Since all\r\n//   we ever care about is existence and directory-ness, we can just keep\r\n//   `true` for files, and [children,...] for directories, or `false` for\r\n//   things that don't exist.\r\n\r\nmodule.exports = glob\r\n\r\nvar rp = require('fs.realpath')\r\nvar minimatch = require('minimatch')\r\nvar Minimatch = minimatch.Minimatch\r\nvar inherits = require('inherits')\r\nvar EE = require('events').EventEmitter\r\nvar path = require('path')\r\nvar assert = require('assert')\r\nvar isAbsolute = require('path').isAbsolute\r\nvar globSync = require('./sync.js')\r\nvar common = require('./common.js')\r\nvar setopts = common.setopts\r\nvar ownProp = common.ownProp\r\nvar inflight = require('inflight')\r\nvar util = require('util')\r\nvar childrenIgnored = common.childrenIgnored\r\nvar isIgnored = common.isIgnored\r\n\r\nvar once = require('once')\r\n\r\nfunction glob (pattern, options, cb) {\r\n  if (typeof options === 'function') cb = options, options = {}\r\n  if (!options) options = {}\r\n\r\n  if (options.sync) {\r\n    if (cb)\r\n      throw new TypeError('callback provided to sync glob')\r\n    return globSync(pattern, options)\r\n  }\r\n\r\n  return new Glob(pattern, options, cb)\r\n}\r\n\r\nglob.sync = globSync\r\nvar GlobSync = glob.GlobSync = globSync.GlobSync\r\n\r\n// old api surface\r\nglob.glob = glob\r\n\r\nfunction extend (origin, add) {\r\n  if (add === null || typeof add !== 'object') {\r\n    return origin\r\n  }\r\n\r\n  var keys = Object.keys(add)\r\n  var i = keys.length\r\n  while (i--) {\r\n    origin[keys[i]] = add[keys[i]]\r\n  }\r\n  return origin\r\n}\r\n\r\nglob.hasMagic = function (pattern, options_) {\r\n  var options = extend({}, options_)\r\n  options.noprocess = true\r\n\r\n  var g = new Glob(pattern, options)\r\n  var set = g.minimatch.set\r\n\r\n  if (!pattern)\r\n    return false\r\n\r\n  if (set.length > 1)\r\n    return true\r\n\r\n  for (var j = 0; j < set[0].length; j++) {\r\n    if (typeof set[0][j] !== 'string')\r\n      return true\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nglob.Glob = Glob\r\ninherits(Glob, EE)\r\nfunction Glob (pattern, options, cb) {\r\n  if (typeof options === 'function') {\r\n    cb = options\r\n    options = null\r\n  }\r\n\r\n  if (options && options.sync) {\r\n    if (cb)\r\n      throw new TypeError('callback provided to sync glob')\r\n    return new GlobSync(pattern, options)\r\n  }\r\n\r\n  if (!(this instanceof Glob))\r\n    return new Glob(pattern, options, cb)\r\n\r\n  setopts(this, pattern, options)\r\n  this._didRealPath = false\r\n\r\n  // process each pattern in the minimatch set\r\n  var n = this.minimatch.set.length\r\n\r\n  // The matches are stored as {<filename>: true,...} so that\r\n  // duplicates are automagically pruned.\r\n  // Later, we do an Object.keys() on these.\r\n  // Keep them as a list so we can fill in when nonull is set.\r\n  this.matches = new Array(n)\r\n\r\n  if (typeof cb === 'function') {\r\n    cb = once(cb)\r\n    this.on('error', cb)\r\n    this.on('end', function (matches) {\r\n      cb(null, matches)\r\n    })\r\n  }\r\n\r\n  var self = this\r\n  this._processing = 0\r\n\r\n  this._emitQueue = []\r\n  this._processQueue = []\r\n  this.paused = false\r\n\r\n  if (this.noprocess)\r\n    return this\r\n\r\n  if (n === 0)\r\n    return done()\r\n\r\n  var sync = true\r\n  for (var i = 0; i < n; i ++) {\r\n    this._process(this.minimatch.set[i], i, false, done)\r\n  }\r\n  sync = false\r\n\r\n  function done () {\r\n    --self._processing\r\n    if (self._processing <= 0) {\r\n      if (sync) {\r\n        process.nextTick(function () {\r\n          self._finish()\r\n        })\r\n      } else {\r\n        self._finish()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nGlob.prototype._finish = function () {\r\n  assert(this instanceof Glob)\r\n  if (this.aborted)\r\n    return\r\n\r\n  if (this.realpath && !this._didRealpath)\r\n    return this._realpath()\r\n\r\n  common.finish(this)\r\n  this.emit('end', this.found)\r\n}\r\n\r\nGlob.prototype._realpath = function () {\r\n  if (this._didRealpath)\r\n    return\r\n\r\n  this._didRealpath = true\r\n\r\n  var n = this.matches.length\r\n  if (n === 0)\r\n    return this._finish()\r\n\r\n  var self = this\r\n  for (var i = 0; i < this.matches.length; i++)\r\n    this._realpathSet(i, next)\r\n\r\n  function next () {\r\n    if (--n === 0)\r\n      self._finish()\r\n  }\r\n}\r\n\r\nGlob.prototype._realpathSet = function (index, cb) {\r\n  var matchset = this.matches[index]\r\n  if (!matchset)\r\n    return cb()\r\n\r\n  var found = Object.keys(matchset)\r\n  var self = this\r\n  var n = found.length\r\n\r\n  if (n === 0)\r\n    return cb()\r\n\r\n  var set = this.matches[index] = Object.create(null)\r\n  found.forEach(function (p, i) {\r\n    // If there's a problem with the stat, then it means that\r\n    // one or more of the links in the realpath couldn't be\r\n    // resolved.  just return the abs value in that case.\r\n    p = self._makeAbs(p)\r\n    rp.realpath(p, self.realpathCache, function (er, real) {\r\n      if (!er)\r\n        set[real] = true\r\n      else if (er.syscall === 'stat')\r\n        set[p] = true\r\n      else\r\n        self.emit('error', er) // srsly wtf right here\r\n\r\n      if (--n === 0) {\r\n        self.matches[index] = set\r\n        cb()\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nGlob.prototype._mark = function (p) {\r\n  return common.mark(this, p)\r\n}\r\n\r\nGlob.prototype._makeAbs = function (f) {\r\n  return common.makeAbs(this, f)\r\n}\r\n\r\nGlob.prototype.abort = function () {\r\n  this.aborted = true\r\n  this.emit('abort')\r\n}\r\n\r\nGlob.prototype.pause = function () {\r\n  if (!this.paused) {\r\n    this.paused = true\r\n    this.emit('pause')\r\n  }\r\n}\r\n\r\nGlob.prototype.resume = function () {\r\n  if (this.paused) {\r\n    this.emit('resume')\r\n    this.paused = false\r\n    if (this._emitQueue.length) {\r\n      var eq = this._emitQueue.slice(0)\r\n      this._emitQueue.length = 0\r\n      for (var i = 0; i < eq.length; i ++) {\r\n        var e = eq[i]\r\n        this._emitMatch(e[0], e[1])\r\n      }\r\n    }\r\n    if (this._processQueue.length) {\r\n      var pq = this._processQueue.slice(0)\r\n      this._processQueue.length = 0\r\n      for (var i = 0; i < pq.length; i ++) {\r\n        var p = pq[i]\r\n        this._processing--\r\n        this._process(p[0], p[1], p[2], p[3])\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\r\n  assert(this instanceof Glob)\r\n  assert(typeof cb === 'function')\r\n\r\n  if (this.aborted)\r\n    return\r\n\r\n  this._processing++\r\n  if (this.paused) {\r\n    this._processQueue.push([pattern, index, inGlobStar, cb])\r\n    return\r\n  }\r\n\r\n  //console.error('PROCESS %d', this._processing, pattern)\r\n\r\n  // Get the first [n] parts of pattern that are all strings.\r\n  var n = 0\r\n  while (typeof pattern[n] === 'string') {\r\n    n ++\r\n  }\r\n  // now n is the index of the first one that is *not* a string.\r\n\r\n  // see if there's anything else\r\n  var prefix\r\n  switch (n) {\r\n    // if not, then this is rather simple\r\n    case pattern.length:\r\n      this._processSimple(pattern.join('/'), index, cb)\r\n      return\r\n\r\n    case 0:\r\n      // pattern *starts* with some non-trivial item.\r\n      // going to readdir(cwd), but not include the prefix in matches.\r\n      prefix = null\r\n      break\r\n\r\n    default:\r\n      // pattern has some string bits in the front.\r\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\r\n      // or 'relative' like '../baz'\r\n      prefix = pattern.slice(0, n).join('/')\r\n      break\r\n  }\r\n\r\n  var remain = pattern.slice(n)\r\n\r\n  // get the list of entries.\r\n  var read\r\n  if (prefix === null)\r\n    read = '.'\r\n  else if (isAbsolute(prefix) ||\r\n      isAbsolute(pattern.map(function (p) {\r\n        return typeof p === 'string' ? p : '[*]'\r\n      }).join('/'))) {\r\n    if (!prefix || !isAbsolute(prefix))\r\n      prefix = '/' + prefix\r\n    read = prefix\r\n  } else\r\n    read = prefix\r\n\r\n  var abs = this._makeAbs(read)\r\n\r\n  //if ignored, skip _processing\r\n  if (childrenIgnored(this, read))\r\n    return cb()\r\n\r\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\r\n  if (isGlobStar)\r\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\r\n  else\r\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\r\n}\r\n\r\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\r\n  var self = this\r\n  this._readdir(abs, inGlobStar, function (er, entries) {\r\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\r\n  })\r\n}\r\n\r\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\r\n\r\n  // if the abs isn't a dir, then nothing can match!\r\n  if (!entries)\r\n    return cb()\r\n\r\n  // It will only match dot entries if it starts with a dot, or if\r\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\r\n  var pn = remain[0]\r\n  var negate = !!this.minimatch.negate\r\n  var rawGlob = pn._glob\r\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\r\n\r\n  var matchedEntries = []\r\n  for (var i = 0; i < entries.length; i++) {\r\n    var e = entries[i]\r\n    if (e.charAt(0) !== '.' || dotOk) {\r\n      var m\r\n      if (negate && !prefix) {\r\n        m = !e.match(pn)\r\n      } else {\r\n        m = e.match(pn)\r\n      }\r\n      if (m)\r\n        matchedEntries.push(e)\r\n    }\r\n  }\r\n\r\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\r\n\r\n  var len = matchedEntries.length\r\n  // If there are no matched entries, then nothing matches.\r\n  if (len === 0)\r\n    return cb()\r\n\r\n  // if this is the last remaining pattern bit, then no need for\r\n  // an additional stat *unless* the user has specified mark or\r\n  // stat explicitly.  We know they exist, since readdir returned\r\n  // them.\r\n\r\n  if (remain.length === 1 && !this.mark && !this.stat) {\r\n    if (!this.matches[index])\r\n      this.matches[index] = Object.create(null)\r\n\r\n    for (var i = 0; i < len; i ++) {\r\n      var e = matchedEntries[i]\r\n      if (prefix) {\r\n        if (prefix !== '/')\r\n          e = prefix + '/' + e\r\n        else\r\n          e = prefix + e\r\n      }\r\n\r\n      if (e.charAt(0) === '/' && !this.nomount) {\r\n        e = path.join(this.root, e)\r\n      }\r\n      this._emitMatch(index, e)\r\n    }\r\n    // This was the last one, and no stats were needed\r\n    return cb()\r\n  }\r\n\r\n  // now test all matched entries as stand-ins for that part\r\n  // of the pattern.\r\n  remain.shift()\r\n  for (var i = 0; i < len; i ++) {\r\n    var e = matchedEntries[i]\r\n    var newPattern\r\n    if (prefix) {\r\n      if (prefix !== '/')\r\n        e = prefix + '/' + e\r\n      else\r\n        e = prefix + e\r\n    }\r\n    this._process([e].concat(remain), index, inGlobStar, cb)\r\n  }\r\n  cb()\r\n}\r\n\r\nGlob.prototype._emitMatch = function (index, e) {\r\n  if (this.aborted)\r\n    return\r\n\r\n  if (isIgnored(this, e))\r\n    return\r\n\r\n  if (this.paused) {\r\n    this._emitQueue.push([index, e])\r\n    return\r\n  }\r\n\r\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\r\n\r\n  if (this.mark)\r\n    e = this._mark(e)\r\n\r\n  if (this.absolute)\r\n    e = abs\r\n\r\n  if (this.matches[index][e])\r\n    return\r\n\r\n  if (this.nodir) {\r\n    var c = this.cache[abs]\r\n    if (c === 'DIR' || Array.isArray(c))\r\n      return\r\n  }\r\n\r\n  this.matches[index][e] = true\r\n\r\n  var st = this.statCache[abs]\r\n  if (st)\r\n    this.emit('stat', e, st)\r\n\r\n  this.emit('match', e)\r\n}\r\n\r\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\r\n  if (this.aborted)\r\n    return\r\n\r\n  // follow all symlinked directories forever\r\n  // just proceed as if this is a non-globstar situation\r\n  if (this.follow)\r\n    return this._readdir(abs, false, cb)\r\n\r\n  var lstatkey = 'lstat\\0' + abs\r\n  var self = this\r\n  var lstatcb = inflight(lstatkey, lstatcb_)\r\n\r\n  if (lstatcb)\r\n    self.fs.lstat(abs, lstatcb)\r\n\r\n  function lstatcb_ (er, lstat) {\r\n    if (er && er.code === 'ENOENT')\r\n      return cb()\r\n\r\n    var isSym = lstat && lstat.isSymbolicLink()\r\n    self.symlinks[abs] = isSym\r\n\r\n    // If it's not a symlink or a dir, then it's definitely a regular file.\r\n    // don't bother doing a readdir in that case.\r\n    if (!isSym && lstat && !lstat.isDirectory()) {\r\n      self.cache[abs] = 'FILE'\r\n      cb()\r\n    } else\r\n      self._readdir(abs, false, cb)\r\n  }\r\n}\r\n\r\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\r\n  if (this.aborted)\r\n    return\r\n\r\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\r\n  if (!cb)\r\n    return\r\n\r\n  //console.error('RD %j %j', +inGlobStar, abs)\r\n  if (inGlobStar && !ownProp(this.symlinks, abs))\r\n    return this._readdirInGlobStar(abs, cb)\r\n\r\n  if (ownProp(this.cache, abs)) {\r\n    var c = this.cache[abs]\r\n    if (!c || c === 'FILE')\r\n      return cb()\r\n\r\n    if (Array.isArray(c))\r\n      return cb(null, c)\r\n  }\r\n\r\n  var self = this\r\n  self.fs.readdir(abs, readdirCb(this, abs, cb))\r\n}\r\n\r\nfunction readdirCb (self, abs, cb) {\r\n  return function (er, entries) {\r\n    if (er)\r\n      self._readdirError(abs, er, cb)\r\n    else\r\n      self._readdirEntries(abs, entries, cb)\r\n  }\r\n}\r\n\r\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\r\n  if (this.aborted)\r\n    return\r\n\r\n  // if we haven't asked to stat everything, then just\r\n  // assume that everything in there exists, so we can avoid\r\n  // having to stat it a second time.\r\n  if (!this.mark && !this.stat) {\r\n    for (var i = 0; i < entries.length; i ++) {\r\n      var e = entries[i]\r\n      if (abs === '/')\r\n        e = abs + e\r\n      else\r\n        e = abs + '/' + e\r\n      this.cache[e] = true\r\n    }\r\n  }\r\n\r\n  this.cache[abs] = entries\r\n  return cb(null, entries)\r\n}\r\n\r\nGlob.prototype._readdirError = function (f, er, cb) {\r\n  if (this.aborted)\r\n    return\r\n\r\n  // handle errors, and cache the information\r\n  switch (er.code) {\r\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\r\n    case 'ENOTDIR': // totally normal. means it *does* exist.\r\n      var abs = this._makeAbs(f)\r\n      this.cache[abs] = 'FILE'\r\n      if (abs === this.cwdAbs) {\r\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\r\n        error.path = this.cwd\r\n        error.code = er.code\r\n        this.emit('error', error)\r\n        this.abort()\r\n      }\r\n      break\r\n\r\n    case 'ENOENT': // not terribly unusual\r\n    case 'ELOOP':\r\n    case 'ENAMETOOLONG':\r\n    case 'UNKNOWN':\r\n      this.cache[this._makeAbs(f)] = false\r\n      break\r\n\r\n    default: // some unusual error.  Treat as failure.\r\n      this.cache[this._makeAbs(f)] = false\r\n      if (this.strict) {\r\n        this.emit('error', er)\r\n        // If the error is handled, then we abort\r\n        // if not, we threw out of here\r\n        this.abort()\r\n      }\r\n      if (!this.silent)\r\n        console.error('glob error', er)\r\n      break\r\n  }\r\n\r\n  return cb()\r\n}\r\n\r\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\r\n  var self = this\r\n  this._readdir(abs, inGlobStar, function (er, entries) {\r\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\r\n  })\r\n}\r\n\r\n\r\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\r\n  //console.error('pgs2', prefix, remain[0], entries)\r\n\r\n  // no entries means not a dir, so it can never have matches\r\n  // foo.txt/** doesn't match foo.txt\r\n  if (!entries)\r\n    return cb()\r\n\r\n  // test without the globstar, and with every child both below\r\n  // and replacing the globstar.\r\n  var remainWithoutGlobStar = remain.slice(1)\r\n  var gspref = prefix ? [ prefix ] : []\r\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\r\n\r\n  // the noGlobStar pattern exits the inGlobStar state\r\n  this._process(noGlobStar, index, false, cb)\r\n\r\n  var isSym = this.symlinks[abs]\r\n  var len = entries.length\r\n\r\n  // If it's a symlink, and we're in a globstar, then stop\r\n  if (isSym && inGlobStar)\r\n    return cb()\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    var e = entries[i]\r\n    if (e.charAt(0) === '.' && !this.dot)\r\n      continue\r\n\r\n    // these two cases enter the inGlobStar state\r\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\r\n    this._process(instead, index, true, cb)\r\n\r\n    var below = gspref.concat(entries[i], remain)\r\n    this._process(below, index, true, cb)\r\n  }\r\n\r\n  cb()\r\n}\r\n\r\nGlob.prototype._processSimple = function (prefix, index, cb) {\r\n  // XXX review this.  Shouldn't it be doing the mounting etc\r\n  // before doing stat?  kinda weird?\r\n  var self = this\r\n  this._stat(prefix, function (er, exists) {\r\n    self._processSimple2(prefix, index, er, exists, cb)\r\n  })\r\n}\r\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\r\n\r\n  //console.error('ps2', prefix, exists)\r\n\r\n  if (!this.matches[index])\r\n    this.matches[index] = Object.create(null)\r\n\r\n  // If it doesn't exist, then just mark the lack of results\r\n  if (!exists)\r\n    return cb()\r\n\r\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\r\n    var trail = /[\\/\\\\]$/.test(prefix)\r\n    if (prefix.charAt(0) === '/') {\r\n      prefix = path.join(this.root, prefix)\r\n    } else {\r\n      prefix = path.resolve(this.root, prefix)\r\n      if (trail)\r\n        prefix += '/'\r\n    }\r\n  }\r\n\r\n  if (process.platform === 'win32')\r\n    prefix = prefix.replace(/\\\\/g, '/')\r\n\r\n  // Mark this as a match\r\n  this._emitMatch(index, prefix)\r\n  cb()\r\n}\r\n\r\n// Returns either 'DIR', 'FILE', or false\r\nGlob.prototype._stat = function (f, cb) {\r\n  var abs = this._makeAbs(f)\r\n  var needDir = f.slice(-1) === '/'\r\n\r\n  if (f.length > this.maxLength)\r\n    return cb()\r\n\r\n  if (!this.stat && ownProp(this.cache, abs)) {\r\n    var c = this.cache[abs]\r\n\r\n    if (Array.isArray(c))\r\n      c = 'DIR'\r\n\r\n    // It exists, but maybe not how we need it\r\n    if (!needDir || c === 'DIR')\r\n      return cb(null, c)\r\n\r\n    if (needDir && c === 'FILE')\r\n      return cb()\r\n\r\n    // otherwise we have to stat, because maybe c=true\r\n    // if we know it exists, but not what it is.\r\n  }\r\n\r\n  var exists\r\n  var stat = this.statCache[abs]\r\n  if (stat !== undefined) {\r\n    if (stat === false)\r\n      return cb(null, stat)\r\n    else {\r\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\r\n      if (needDir && type === 'FILE')\r\n        return cb()\r\n      else\r\n        return cb(null, type, stat)\r\n    }\r\n  }\r\n\r\n  var self = this\r\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\r\n  if (statcb)\r\n    self.fs.lstat(abs, statcb)\r\n\r\n  function lstatcb_ (er, lstat) {\r\n    if (lstat && lstat.isSymbolicLink()) {\r\n      // If it's a symlink, then treat it as the target, unless\r\n      // the target does not exist, then treat it as a file.\r\n      return self.fs.stat(abs, function (er, stat) {\r\n        if (er)\r\n          self._stat2(f, abs, null, lstat, cb)\r\n        else\r\n          self._stat2(f, abs, er, stat, cb)\r\n      })\r\n    } else {\r\n      self._stat2(f, abs, er, lstat, cb)\r\n    }\r\n  }\r\n}\r\n\r\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\r\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\r\n    this.statCache[abs] = false\r\n    return cb()\r\n  }\r\n\r\n  var needDir = f.slice(-1) === '/'\r\n  this.statCache[abs] = stat\r\n\r\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\r\n    return cb(null, false, stat)\r\n\r\n  var c = true\r\n  if (stat)\r\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\r\n  this.cache[abs] = this.cache[abs] || c\r\n\r\n  if (needDir && c === 'FILE')\r\n    return cb()\r\n\r\n  return cb(null, c, stat)\r\n}\r\n"],
  "mappings": "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",
  "names": ["err", "base", "require_fs", "require_path", "set", "m", "path", "cb", "er", "stat"]
}
